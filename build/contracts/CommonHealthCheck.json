{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loss",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debtPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debtOutstanding",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDebt",
          "type": "uint256"
        }
      ],
      "name": "check",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "checks",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lossLimitRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "management",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "profitLimitRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_check",
          "type": "address"
        }
      ],
      "name": "setCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_management",
          "type": "address"
        }
      ],
      "name": "setManagement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_profitLimitRatio",
          "type": "uint256"
        }
      ],
      "name": "setProfitLimitRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_profitLimitRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lossLimitRatio",
          "type": "uint256"
        }
      ],
      "name": "setStrategyLimits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lossLimitRatio",
          "type": "uint256"
        }
      ],
      "name": "setlossLimitRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strategiesLimits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "profitLimitRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lossLimitRatio",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/CommonHealthCheck.sol"
  },
  "ast": {
    "absolutePath": "contracts/CommonHealthCheck.sol",
    "exportedSymbols": {
      "CommonHealthCheck": [
        2820
      ],
      "CustomHealthCheck": [
        2448
      ],
      "LegacyStrategyParams": [
        2465
      ],
      "Limits": [
        2472
      ]
    },
    "id": 2821,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2431,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:10"
      },
      {
        "id": 2432,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "68:33:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 2448,
        "linearizedBaseContracts": [
          2448
        ],
        "name": "CustomHealthCheck",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "e53ec13f",
            "id": 2447,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "check",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2434,
                  "mutability": "mutable",
                  "name": "profit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2447,
                  "src": "161:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "161:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2436,
                  "mutability": "mutable",
                  "name": "loss",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2447,
                  "src": "185:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "185:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2438,
                  "mutability": "mutable",
                  "name": "debtPayment",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2447,
                  "src": "207:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "207:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2440,
                  "mutability": "mutable",
                  "name": "debtOutstanding",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2447,
                  "src": "236:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "236:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2442,
                  "mutability": "mutable",
                  "name": "callerStrategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2447,
                  "src": "269:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "151:146:10"
            },
            "returnParameters": {
              "id": 2446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2445,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2447,
                  "src": "321:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2444,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "320:6:10"
            },
            "scope": 2448,
            "src": "137:190:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2821,
        "src": "103:226:10"
      },
      {
        "canonicalName": "LegacyStrategyParams",
        "id": 2465,
        "members": [
          {
            "constant": false,
            "id": 2450,
            "mutability": "mutable",
            "name": "performanceFee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2465,
            "src": "396:22:10",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2449,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "396:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2452,
            "mutability": "mutable",
            "name": "activation",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2465,
            "src": "424:18:10",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2451,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "424:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2454,
            "mutability": "mutable",
            "name": "debtRatio",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2465,
            "src": "448:17:10",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2453,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "448:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2456,
            "mutability": "mutable",
            "name": "rateLimit",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2465,
            "src": "471:17:10",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2455,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "471:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2458,
            "mutability": "mutable",
            "name": "lastReport",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2465,
            "src": "494:18:10",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2457,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "494:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2460,
            "mutability": "mutable",
            "name": "totalDebt",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2465,
            "src": "518:17:10",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2459,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "518:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2462,
            "mutability": "mutable",
            "name": "totalGain",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2465,
            "src": "541:17:10",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2461,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "541:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2464,
            "mutability": "mutable",
            "name": "totalLoss",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2465,
            "src": "564:17:10",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2463,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "564:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          }
        ],
        "name": "LegacyStrategyParams",
        "nodeType": "StructDefinition",
        "scope": 2821,
        "src": "362:222:10",
        "visibility": "public"
      },
      {
        "canonicalName": "Limits",
        "id": 2472,
        "members": [
          {
            "constant": false,
            "id": 2467,
            "mutability": "mutable",
            "name": "profitLimitRatio",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2472,
            "src": "606:24:10",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2466,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "606:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2469,
            "mutability": "mutable",
            "name": "lossLimitRatio",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2472,
            "src": "636:22:10",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2468,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "636:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2471,
            "mutability": "mutable",
            "name": "exists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2472,
            "src": "664:11:10",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2470,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "664:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          }
        ],
        "name": "Limits",
        "nodeType": "StructDefinition",
        "scope": 2821,
        "src": "586:92:10",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2820,
        "linearizedBaseContracts": [
          2820
        ],
        "name": "CommonHealthCheck",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 2475,
            "mutability": "constant",
            "name": "MAX_BPS",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2820,
            "src": "756:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2473,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "756:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31305f303030",
              "id": 2474,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "783:6:10",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "4a5d0943",
            "id": 2477,
            "mutability": "mutable",
            "name": "profitLimitRatio",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2820,
            "src": "795:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2476,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "795:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7d969932",
            "id": 2479,
            "mutability": "mutable",
            "name": "lossLimitRatio",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2820,
            "src": "832:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2478,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "832:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c9354337",
            "id": 2483,
            "mutability": "mutable",
            "name": "strategiesLimits",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2820,
            "src": "867:50:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Limits_$2472_storage_$",
              "typeString": "mapping(address => struct Limits)"
            },
            "typeName": {
              "id": 2482,
              "keyType": {
                "id": 2480,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "875:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "867:26:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Limits_$2472_storage_$",
                "typeString": "mapping(address => struct Limits)"
              },
              "valueType": {
                "contractScope": null,
                "id": 2481,
                "name": "Limits",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2472,
                "src": "886:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Limits_$2472_storage_ptr",
                  "typeString": "struct Limits"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5aa6e675",
            "id": 2485,
            "mutability": "mutable",
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2820,
            "src": "924:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2484,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "924:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "88a8d602",
            "id": 2487,
            "mutability": "mutable",
            "name": "management",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2820,
            "src": "955:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2486,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "955:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27fff0db",
            "id": 2491,
            "mutability": "mutable",
            "name": "checks",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2820,
            "src": "987:41:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 2490,
              "keyType": {
                "id": 2488,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "995:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "987:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 2489,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1006:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2502,
              "nodeType": "Block",
              "src": "1061:76:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2494,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1079:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1079:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2496,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2485,
                          "src": "1093:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1079:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 2498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1105:13:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 2493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1071:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1071:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2500,
                  "nodeType": "ExpressionStatement",
                  "src": "1071:48:10"
                },
                {
                  "id": 2501,
                  "nodeType": "PlaceholderStatement",
                  "src": "1129:1:10"
                }
              ]
            },
            "documentation": null,
            "id": 2503,
            "name": "onlyGovernance",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 2492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1058:2:10"
            },
            "src": "1035:102:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2519,
              "nodeType": "Block",
              "src": "1169:104:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2506,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1187:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1187:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2508,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2485,
                            "src": "1201:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1187:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2510,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1215:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1215:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2512,
                            "name": "management",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2487,
                            "src": "1229:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1215:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1187:52:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "21617574686f72697a6564",
                        "id": 2515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1241:13:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 2505,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1179:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1179:76:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2517,
                  "nodeType": "ExpressionStatement",
                  "src": "1179:76:10"
                },
                {
                  "id": 2518,
                  "nodeType": "PlaceholderStatement",
                  "src": "1265:1:10"
                }
              ]
            },
            "documentation": null,
            "id": 2520,
            "name": "onlyAuthorized",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 2504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1166:2:10"
            },
            "src": "1143:130:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2541,
              "nodeType": "Block",
              "src": "1300:135:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2523,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2485,
                      "src": "1310:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2524,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1323:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1323:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1310:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2527,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:23:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2528,
                      "name": "management",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2487,
                      "src": "1343:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2529,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1356:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1356:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1343:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2532,
                  "nodeType": "ExpressionStatement",
                  "src": "1343:23:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2533,
                      "name": "profitLimitRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2477,
                      "src": "1376:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "333030",
                      "id": 2534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1395:3:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_300_by_1",
                        "typeString": "int_const 300"
                      },
                      "value": "300"
                    },
                    "src": "1376:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2536,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:22:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2537,
                      "name": "lossLimitRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2479,
                      "src": "1408:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 2538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1425:3:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1408:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2540,
                  "nodeType": "ExpressionStatement",
                  "src": "1408:20:10"
                }
              ]
            },
            "documentation": null,
            "id": 2542,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1290:2:10"
            },
            "returnParameters": {
              "id": 2522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1300:0:10"
            },
            "scope": 2820,
            "src": "1279:156:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2562,
              "nodeType": "Block",
              "src": "1509:85:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2550,
                          "name": "_governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2544,
                          "src": "1527:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1550:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1542:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2551,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1542:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1542:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1527:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1519:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1519:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2557,
                  "nodeType": "ExpressionStatement",
                  "src": "1519:34:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2558,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2485,
                      "src": "1563:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2559,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2544,
                      "src": "1576:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1563:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2561,
                  "nodeType": "ExpressionStatement",
                  "src": "1563:24:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ab033ea9",
            "id": 2563,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2547,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2546,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2503,
                  "src": "1494:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1494:14:10"
              }
            ],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2544,
                  "mutability": "mutable",
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2563,
                  "src": "1464:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1463:21:10"
            },
            "returnParameters": {
              "id": 2548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1509:0:10"
            },
            "scope": 2820,
            "src": "1441:153:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2583,
              "nodeType": "Block",
              "src": "1668:85:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2571,
                          "name": "_management",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2565,
                          "src": "1686:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1709:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1701:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2572,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1701:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1701:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1686:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2570,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1678:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1678:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2578,
                  "nodeType": "ExpressionStatement",
                  "src": "1678:34:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2579,
                      "name": "management",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2487,
                      "src": "1722:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2580,
                      "name": "_management",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2565,
                      "src": "1735:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1722:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2582,
                  "nodeType": "ExpressionStatement",
                  "src": "1722:24:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d4a22bde",
            "id": 2584,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2568,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2567,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2503,
                  "src": "1653:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1653:14:10"
              }
            ],
            "name": "setManagement",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2565,
                  "mutability": "mutable",
                  "name": "_management",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2584,
                  "src": "1623:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1623:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1622:21:10"
            },
            "returnParameters": {
              "id": 2569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1668:0:10"
            },
            "scope": 2820,
            "src": "1600:153:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2601,
              "nodeType": "Block",
              "src": "1839:99:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2592,
                          "name": "_profitLimitRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2586,
                          "src": "1857:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2593,
                          "name": "MAX_BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2475,
                          "src": "1877:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1857:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1849:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1849:36:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2596,
                  "nodeType": "ExpressionStatement",
                  "src": "1849:36:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2597,
                      "name": "profitLimitRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2477,
                      "src": "1895:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2598,
                      "name": "_profitLimitRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2586,
                      "src": "1914:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1895:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2600,
                  "nodeType": "ExpressionStatement",
                  "src": "1895:36:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "950b3d73",
            "id": 2602,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2589,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2588,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2520,
                  "src": "1824:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1824:14:10"
              }
            ],
            "name": "setProfitLimitRatio",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2586,
                  "mutability": "mutable",
                  "name": "_profitLimitRatio",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2602,
                  "src": "1788:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1787:27:10"
            },
            "returnParameters": {
              "id": 2590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1839:0:10"
            },
            "scope": 2820,
            "src": "1759:179:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2619,
              "nodeType": "Block",
              "src": "2020:93:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2610,
                          "name": "_lossLimitRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2604,
                          "src": "2038:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2611,
                          "name": "MAX_BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2475,
                          "src": "2056:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2038:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2609,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2030:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2030:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2614,
                  "nodeType": "ExpressionStatement",
                  "src": "2030:34:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2615,
                      "name": "lossLimitRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2479,
                      "src": "2074:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2616,
                      "name": "_lossLimitRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2604,
                      "src": "2091:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2074:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2618,
                  "nodeType": "ExpressionStatement",
                  "src": "2074:32:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0ef5ee02",
            "id": 2620,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2607,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2606,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2520,
                  "src": "2005:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2005:14:10"
              }
            ],
            "name": "setlossLimitRatio",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2604,
                  "mutability": "mutable",
                  "name": "_lossLimitRatio",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2620,
                  "src": "1971:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1970:25:10"
            },
            "returnParameters": {
              "id": 2608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2020:0:10"
            },
            "scope": 2820,
            "src": "1944:169:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2653,
              "nodeType": "Block",
              "src": "2271:185:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2632,
                          "name": "_lossLimitRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2626,
                          "src": "2289:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2633,
                          "name": "MAX_BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2475,
                          "src": "2307:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2289:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2631,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2281:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2281:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2636,
                  "nodeType": "ExpressionStatement",
                  "src": "2281:34:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2638,
                          "name": "_profitLimitRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2624,
                          "src": "2333:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2639,
                          "name": "MAX_BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2475,
                          "src": "2353:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2333:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2325:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2325:36:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2642,
                  "nodeType": "ExpressionStatement",
                  "src": "2325:36:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2643,
                        "name": "strategiesLimits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2483,
                        "src": "2371:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Limits_$2472_storage_$",
                          "typeString": "mapping(address => struct Limits storage ref)"
                        }
                      },
                      "id": 2645,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2644,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2622,
                        "src": "2388:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2371:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Limits_$2472_storage",
                        "typeString": "struct Limits storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2647,
                          "name": "_profitLimitRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2624,
                          "src": "2408:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2648,
                          "name": "_lossLimitRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2626,
                          "src": "2427:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2444:4:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 2646,
                        "name": "Limits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2472,
                        "src": "2401:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Limits_$2472_storage_ptr_$",
                          "typeString": "type(struct Limits storage pointer)"
                        }
                      },
                      "id": 2650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2401:48:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Limits_$2472_memory_ptr",
                        "typeString": "struct Limits memory"
                      }
                    },
                    "src": "2371:78:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Limits_$2472_storage",
                      "typeString": "struct Limits storage ref"
                    }
                  },
                  "id": 2652,
                  "nodeType": "ExpressionStatement",
                  "src": "2371:78:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "00fd31f0",
            "id": 2654,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2629,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2628,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2520,
                  "src": "2256:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2256:14:10"
              }
            ],
            "name": "setStrategyLimits",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2622,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2654,
                  "src": "2155:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2155:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2624,
                  "mutability": "mutable",
                  "name": "_profitLimitRatio",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2654,
                  "src": "2182:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2182:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2626,
                  "mutability": "mutable",
                  "name": "_lossLimitRatio",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2654,
                  "src": "2217:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2145:101:10"
            },
            "returnParameters": {
              "id": 2630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2271:0:10"
            },
            "scope": 2820,
            "src": "2119:337:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2669,
              "nodeType": "Block",
              "src": "2539:43:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2663,
                        "name": "checks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "2549:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2665,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2664,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2656,
                        "src": "2556:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2549:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2666,
                      "name": "_check",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2658,
                      "src": "2569:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2549:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2668,
                  "nodeType": "ExpressionStatement",
                  "src": "2549:26:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1afdc5a2",
            "id": 2670,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2661,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2660,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2520,
                  "src": "2524:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2524:14:10"
              }
            ],
            "name": "setCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2656,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2670,
                  "src": "2480:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2480:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2658,
                  "mutability": "mutable",
                  "name": "_check",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2670,
                  "src": "2499:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2499:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2479:35:10"
            },
            "returnParameters": {
              "id": 2662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2539:0:10"
            },
            "scope": 2820,
            "src": "2462:120:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2693,
              "nodeType": "Block",
              "src": "2773:89:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2686,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2672,
                        "src": "2801:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2687,
                        "name": "loss",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2674,
                        "src": "2809:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2688,
                        "name": "debtPayment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2676,
                        "src": "2815:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2689,
                        "name": "debtOutstanding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2678,
                        "src": "2828:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2690,
                        "name": "totalDebt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2680,
                        "src": "2845:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2685,
                      "name": "_runChecks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2743,
                      "src": "2790:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256) view returns (bool)"
                      }
                    },
                    "id": 2691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2790:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2684,
                  "id": 2692,
                  "nodeType": "Return",
                  "src": "2783:72:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c70fa00b",
            "id": 2694,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2672,
                  "mutability": "mutable",
                  "name": "profit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2694,
                  "src": "2612:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2612:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2674,
                  "mutability": "mutable",
                  "name": "loss",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2694,
                  "src": "2636:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2676,
                  "mutability": "mutable",
                  "name": "debtPayment",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2694,
                  "src": "2658:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2678,
                  "mutability": "mutable",
                  "name": "debtOutstanding",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2694,
                  "src": "2687:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2687:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2680,
                  "mutability": "mutable",
                  "name": "totalDebt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2694,
                  "src": "2720:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2602:141:10"
            },
            "returnParameters": {
              "id": 2684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2683,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2694,
                  "src": "2767:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2767:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2766:6:10"
            },
            "scope": 2820,
            "src": "2588:274:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2742,
              "nodeType": "Block",
              "src": "3058:285:10",
              "statements": [
                {
                  "assignments": [
                    2710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2710,
                      "mutability": "mutable",
                      "name": "customCheck",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2742,
                      "src": "3068:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2709,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3068:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2715,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2711,
                      "name": "checks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2491,
                      "src": "3090:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 2714,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2712,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3097:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3097:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3090:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3068:40:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2716,
                      "name": "customCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2710,
                      "src": "3123:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3146:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3138:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2717,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3138:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3138:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3123:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2729,
                  "nodeType": "IfStatement",
                  "src": "3119:108:10",
                  "trueBody": {
                    "id": 2728,
                    "nodeType": "Block",
                    "src": "3150:77:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2723,
                              "name": "profit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2696,
                              "src": "3192:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2724,
                              "name": "loss",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2698,
                              "src": "3200:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2725,
                              "name": "totalDebt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2704,
                              "src": "3206:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2722,
                            "name": "_executeDefaultCheck",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2819,
                            "src": "3171:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256,uint256,uint256) view returns (bool)"
                            }
                          },
                          "id": 2726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3171:45:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2708,
                        "id": 2727,
                        "nodeType": "Return",
                        "src": "3164:52:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2734,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2696,
                        "src": "3281:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2735,
                        "name": "loss",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2698,
                        "src": "3289:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2736,
                        "name": "debtPayment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2700,
                        "src": "3295:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2737,
                        "name": "debtOutstanding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2702,
                        "src": "3308:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2738,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3325:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3325:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2731,
                            "name": "customCheck",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2710,
                            "src": "3262:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2730,
                          "name": "CustomHealthCheck",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2448,
                          "src": "3244:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CustomHealthCheck_$2448_$",
                            "typeString": "type(contract CustomHealthCheck)"
                          }
                        },
                        "id": 2732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3244:30:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CustomHealthCheck_$2448",
                          "typeString": "contract CustomHealthCheck"
                        }
                      },
                      "id": 2733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "check",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2447,
                      "src": "3244:36:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address) view external returns (bool)"
                      }
                    },
                    "id": 2740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3244:92:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2708,
                  "id": 2741,
                  "nodeType": "Return",
                  "src": "3237:99:10"
                }
              ]
            },
            "documentation": null,
            "id": 2743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_runChecks",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2696,
                  "mutability": "mutable",
                  "name": "profit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2743,
                  "src": "2897:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2897:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2698,
                  "mutability": "mutable",
                  "name": "loss",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2743,
                  "src": "2921:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2921:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2700,
                  "mutability": "mutable",
                  "name": "debtPayment",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2743,
                  "src": "2943:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2943:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2702,
                  "mutability": "mutable",
                  "name": "debtOutstanding",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2743,
                  "src": "2972:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2972:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2704,
                  "mutability": "mutable",
                  "name": "totalDebt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2743,
                  "src": "3005:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3005:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2887:141:10"
            },
            "returnParameters": {
              "id": 2708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2707,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2743,
                  "src": "3052:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2706,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3052:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3051:6:10"
            },
            "scope": 2820,
            "src": "2868:475:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2818,
              "nodeType": "Block",
              "src": "3490:628:10",
              "statements": [
                {
                  "assignments": [
                    2755
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2755,
                      "mutability": "mutable",
                      "name": "limits",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2818,
                      "src": "3500:20:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Limits_$2472_memory_ptr",
                        "typeString": "struct Limits"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2754,
                        "name": "Limits",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2472,
                        "src": "3500:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Limits_$2472_storage_ptr",
                          "typeString": "struct Limits"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2760,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2756,
                      "name": "strategiesLimits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2483,
                      "src": "3523:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Limits_$2472_storage_$",
                        "typeString": "mapping(address => struct Limits storage ref)"
                      }
                    },
                    "id": 2759,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2757,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3540:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3540:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3523:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Limits_$2472_storage",
                      "typeString": "struct Limits storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3500:51:10"
                },
                {
                  "assignments": [
                    2762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2762,
                      "mutability": "mutable",
                      "name": "_profitLimitRatio",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2818,
                      "src": "3561:25:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2761,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3561:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2763,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3561:25:10"
                },
                {
                  "assignments": [
                    2765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2765,
                      "mutability": "mutable",
                      "name": "_lossLimitRatio",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2818,
                      "src": "3596:23:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2764,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3596:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2766,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3596:23:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2767,
                      "name": "limits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2755,
                      "src": "3633:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Limits_$2472_memory_ptr",
                        "typeString": "struct Limits memory"
                      }
                    },
                    "id": 2768,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "exists",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2471,
                    "src": "3633:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2788,
                    "nodeType": "Block",
                    "src": "3775:107:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2780,
                            "name": "_profitLimitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2762,
                            "src": "3789:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2781,
                            "name": "profitLimitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2477,
                            "src": "3809:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3789:36:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2783,
                        "nodeType": "ExpressionStatement",
                        "src": "3789:36:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2784,
                            "name": "_lossLimitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2765,
                            "src": "3839:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2785,
                            "name": "lossLimitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2479,
                            "src": "3857:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3839:32:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2787,
                        "nodeType": "ExpressionStatement",
                        "src": "3839:32:10"
                      }
                    ]
                  },
                  "id": 2789,
                  "nodeType": "IfStatement",
                  "src": "3629:253:10",
                  "trueBody": {
                    "id": 2779,
                    "nodeType": "Block",
                    "src": "3648:121:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2769,
                            "name": "_profitLimitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2762,
                            "src": "3662:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2770,
                              "name": "limits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2755,
                              "src": "3682:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Limits_$2472_memory_ptr",
                                "typeString": "struct Limits memory"
                              }
                            },
                            "id": 2771,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "profitLimitRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2467,
                            "src": "3682:23:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3662:43:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2773,
                        "nodeType": "ExpressionStatement",
                        "src": "3662:43:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2774,
                            "name": "_lossLimitRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2765,
                            "src": "3719:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2775,
                              "name": "limits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2755,
                              "src": "3737:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Limits_$2472_memory_ptr",
                                "typeString": "struct Limits memory"
                              }
                            },
                            "id": 2776,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lossLimitRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2469,
                            "src": "3737:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3719:39:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2778,
                        "nodeType": "ExpressionStatement",
                        "src": "3719:39:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2790,
                      "name": "_profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2745,
                      "src": "3896:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2791,
                                  "name": "_totalDebt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2749,
                                  "src": "3908:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2792,
                                  "name": "_profitLimitRatio",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2762,
                                  "src": "3921:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3908:30:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2794,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3907:32:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2795,
                            "name": "MAX_BPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2475,
                            "src": "3942:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3907:42:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2797,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3906:44:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3896:54:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2802,
                  "nodeType": "IfStatement",
                  "src": "3892:97:10",
                  "trueBody": {
                    "id": 2801,
                    "nodeType": "Block",
                    "src": "3952:37:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 2799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3973:5:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 2753,
                        "id": 2800,
                        "nodeType": "Return",
                        "src": "3966:12:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2803,
                      "name": "_loss",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2747,
                      "src": "4002:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2804,
                                  "name": "_totalDebt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2749,
                                  "src": "4012:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2805,
                                  "name": "_lossLimitRatio",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2765,
                                  "src": "4025:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4012:28:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2807,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4011:30:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2808,
                            "name": "MAX_BPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2475,
                            "src": "4044:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4011:40:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2810,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4010:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4002:50:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2815,
                  "nodeType": "IfStatement",
                  "src": "3998:93:10",
                  "trueBody": {
                    "id": 2814,
                    "nodeType": "Block",
                    "src": "4054:37:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 2812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4075:5:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 2753,
                        "id": 2813,
                        "nodeType": "Return",
                        "src": "4068:12:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4107:4:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2753,
                  "id": 2817,
                  "nodeType": "Return",
                  "src": "4100:11:10"
                }
              ]
            },
            "documentation": null,
            "id": 2819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeDefaultCheck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2745,
                  "mutability": "mutable",
                  "name": "_profit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2819,
                  "src": "3388:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3388:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2747,
                  "mutability": "mutable",
                  "name": "_loss",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2819,
                  "src": "3413:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3413:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2749,
                  "mutability": "mutable",
                  "name": "_totalDebt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2819,
                  "src": "3436:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3436:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3378:82:10"
            },
            "returnParameters": {
              "id": 2753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2752,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2819,
                  "src": "3484:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2751,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3484:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3483:6:10"
            },
            "scope": 2820,
            "src": "3349:769:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2821,
        "src": "680:3440:10"
      }
    ],
    "src": "36:4085:10"
  },
  "bytecode": "608060405234801561001057600080fd5b50600380546001600160a01b03199081163390811790925560048054909116909117905561012c600055606460015561084f8061004e6000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80637d9699321161008c578063ab033ea911610066578063ab033ea914610177578063c70fa00b1461018a578063c9354337146101aa578063d4a22bde146101cc576100ce565b80637d9699321461015457806388a8d6021461015c578063950b3d7314610164576100ce565b8062fd31f0146100d35780630ef5ee02146100e85780631afdc5a2146100fb57806327fff0db1461010e5780634a5d0943146101375780635aa6e6751461014c575b600080fd5b6100e66100e13660046106e3565b6101df565b005b6100e66100f6366004610736565b61029a565b6100e66101093660046106af565b6102ec565b61012161011c366004610694565b610359565b60405161012e9190610788565b60405180910390f35b61013f610374565b60405161012e91906107cc565b61012161037a565b61013f610389565b61012161038f565b6100e6610172366004610736565b61039e565b6100e6610185366004610694565b6103f0565b61019d61019836600461074e565b61044f565b60405161012e919061079c565b6101bd6101b8366004610694565b61046a565b60405161012e939291906107d5565b6100e66101da366004610694565b61048d565b6003546001600160a01b031633148061020257506004546001600160a01b031633145b6102275760405162461bcd60e51b815260040161021e906107a7565b60405180910390fd5b612710811061023557600080fd5b612710821061024357600080fd5b60408051606081018252928352602080840192835260018483018181526001600160a01b03969096166000908152600292839052929092209351845591519083015591519101805460ff1916911515919091179055565b6003546001600160a01b03163314806102bd57506004546001600160a01b031633145b6102d95760405162461bcd60e51b815260040161021e906107a7565b61271081106102e757600080fd5b600155565b6003546001600160a01b031633148061030f57506004546001600160a01b031633145b61032b5760405162461bcd60e51b815260040161021e906107a7565b6001600160a01b03918216600090815260056020526040902080546001600160a01b03191691909216179055565b6005602052600090815260409020546001600160a01b031681565b60005481565b6003546001600160a01b031681565b60015481565b6004546001600160a01b031681565b6003546001600160a01b03163314806103c157506004546001600160a01b031633145b6103dd5760405162461bcd60e51b815260040161021e906107a7565b61271081106103eb57600080fd5b600055565b6003546001600160a01b0316331461041a5760405162461bcd60e51b815260040161021e906107a7565b6001600160a01b03811661042d57600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600061045e86868686866104ec565b90505b95945050505050565b600260208190526000918252604090912080546001820154919092015460ff1683565b6003546001600160a01b031633146104b75760405162461bcd60e51b815260040161021e906107a7565b6001600160a01b0381166104ca57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b336000908152600560205260408120546001600160a01b03168061051d576105158787856105ac565b915050610461565b60405163e53ec13f60e01b81526001600160a01b0382169063e53ec13f90610551908a908a908a908a9033906004016107ed565b60206040518083038186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a19190610716565b979650505050505050565b60006105b6610654565b503360009081526002602081815260408084208151606081018352815481526001820154938101939093529092015460ff16158015928201929092529190819061060857505080516020820151610611565b50506000546001545b6127108583020487111561062b576000935050505061064d565b61271085820204861115610645576000935050505061064d565b600193505050505b9392505050565b604051806060016040528060008152602001600081526020016000151581525090565b80356001600160a01b038116811461068e57600080fd5b92915050565b6000602082840312156106a5578081fd5b61064d8383610677565b600080604083850312156106c1578081fd5b6106cb8484610677565b91506106da8460208501610677565b90509250929050565b6000806000606084860312156106f7578081fd5b6107018585610677565b95602085013595506040909401359392505050565b600060208284031215610727578081fd5b8151801515811461064d578182fd5b600060208284031215610747578081fd5b5035919050565b600080600080600060a08688031215610765578081fd5b505083359560208501359550604085013594606081013594506080013592509050565b6001600160a01b0391909116815260200190565b901515815260200190565b6020808252600b908201526a08585d5d1a1bdc9a5e995960aa1b604082015260600190565b90815260200190565b92835260208301919091521515604082015260600190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a0019056fea264697066735822122076eaa6acd1aa009409b66efc56821ea03f080d647eec73c2a3c73b1a1d0e7dc864736f6c634300060c0033",
  "bytecodeSha1": "c23bbba352b8de24c015d0a1a1137363aa19ba26",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "CommonHealthCheck",
  "coverageMap": {
    "branches": {
      "10": {
        "CommonHealthCheck._executeDefaultCheck": {
          "30": [
            3896,
            3950,
            false
          ],
          "31": [
            4002,
            4052,
            false
          ]
        },
        "CommonHealthCheck._runChecks": {
          "29": [
            3123,
            3148,
            false
          ]
        },
        "CommonHealthCheck.setGovernance": {
          "27": [
            1527,
            1552,
            true
          ]
        },
        "CommonHealthCheck.setManagement": {
          "28": [
            1686,
            1711,
            true
          ]
        },
        "CommonHealthCheck.setProfitLimitRatio": {
          "25": [
            1187,
            1211,
            true
          ],
          "26": [
            1857,
            1884,
            true
          ]
        },
        "CommonHealthCheck.setStrategyLimits": {
          "22": [
            2289,
            2314,
            true
          ],
          "23": [
            2333,
            2360,
            true
          ]
        },
        "CommonHealthCheck.setlossLimitRatio": {
          "24": [
            2038,
            2063,
            true
          ]
        }
      }
    },
    "statements": {
      "10": {
        "CommonHealthCheck._executeDefaultCheck": {
          "15": [
            3662,
            3705
          ],
          "16": [
            3719,
            3758
          ],
          "17": [
            3789,
            3825
          ],
          "18": [
            3839,
            3871
          ],
          "19": [
            3966,
            3978
          ],
          "20": [
            4068,
            4080
          ],
          "21": [
            4100,
            4111
          ]
        },
        "CommonHealthCheck._runChecks": {
          "13": [
            3164,
            3216
          ],
          "14": [
            3237,
            3336
          ]
        },
        "CommonHealthCheck.check": {
          "10": [
            2783,
            2855
          ]
        },
        "CommonHealthCheck.setCheck": {
          "5": [
            2549,
            2575
          ]
        },
        "CommonHealthCheck.setGovernance": {
          "8": [
            1519,
            1553
          ],
          "9": [
            1563,
            1587
          ]
        },
        "CommonHealthCheck.setManagement": {
          "11": [
            1678,
            1712
          ],
          "12": [
            1722,
            1746
          ]
        },
        "CommonHealthCheck.setProfitLimitRatio": {
          "6": [
            1849,
            1885
          ],
          "7": [
            1895,
            1931
          ]
        },
        "CommonHealthCheck.setStrategyLimits": {
          "0": [
            2281,
            2315
          ],
          "1": [
            2325,
            2361
          ],
          "2": [
            2371,
            2449
          ]
        },
        "CommonHealthCheck.setlossLimitRatio": {
          "3": [
            2030,
            2064
          ],
          "4": [
            2074,
            2106
          ]
        }
      }
    }
  },
  "dependencies": [
    "CustomHealthCheck"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100ce5760003560e01c80637d9699321161008c578063ab033ea911610066578063ab033ea914610177578063c70fa00b1461018a578063c9354337146101aa578063d4a22bde146101cc576100ce565b80637d9699321461015457806388a8d6021461015c578063950b3d7314610164576100ce565b8062fd31f0146100d35780630ef5ee02146100e85780631afdc5a2146100fb57806327fff0db1461010e5780634a5d0943146101375780635aa6e6751461014c575b600080fd5b6100e66100e13660046106e3565b6101df565b005b6100e66100f6366004610736565b61029a565b6100e66101093660046106af565b6102ec565b61012161011c366004610694565b610359565b60405161012e9190610788565b60405180910390f35b61013f610374565b60405161012e91906107cc565b61012161037a565b61013f610389565b61012161038f565b6100e6610172366004610736565b61039e565b6100e6610185366004610694565b6103f0565b61019d61019836600461074e565b61044f565b60405161012e919061079c565b6101bd6101b8366004610694565b61046a565b60405161012e939291906107d5565b6100e66101da366004610694565b61048d565b6003546001600160a01b031633148061020257506004546001600160a01b031633145b6102275760405162461bcd60e51b815260040161021e906107a7565b60405180910390fd5b612710811061023557600080fd5b612710821061024357600080fd5b60408051606081018252928352602080840192835260018483018181526001600160a01b03969096166000908152600292839052929092209351845591519083015591519101805460ff1916911515919091179055565b6003546001600160a01b03163314806102bd57506004546001600160a01b031633145b6102d95760405162461bcd60e51b815260040161021e906107a7565b61271081106102e757600080fd5b600155565b6003546001600160a01b031633148061030f57506004546001600160a01b031633145b61032b5760405162461bcd60e51b815260040161021e906107a7565b6001600160a01b03918216600090815260056020526040902080546001600160a01b03191691909216179055565b6005602052600090815260409020546001600160a01b031681565b60005481565b6003546001600160a01b031681565b60015481565b6004546001600160a01b031681565b6003546001600160a01b03163314806103c157506004546001600160a01b031633145b6103dd5760405162461bcd60e51b815260040161021e906107a7565b61271081106103eb57600080fd5b600055565b6003546001600160a01b0316331461041a5760405162461bcd60e51b815260040161021e906107a7565b6001600160a01b03811661042d57600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600061045e86868686866104ec565b90505b95945050505050565b600260208190526000918252604090912080546001820154919092015460ff1683565b6003546001600160a01b031633146104b75760405162461bcd60e51b815260040161021e906107a7565b6001600160a01b0381166104ca57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b336000908152600560205260408120546001600160a01b03168061051d576105158787856105ac565b915050610461565b60405163e53ec13f60e01b81526001600160a01b0382169063e53ec13f90610551908a908a908a908a9033906004016107ed565b60206040518083038186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a19190610716565b979650505050505050565b60006105b6610654565b503360009081526002602081815260408084208151606081018352815481526001820154938101939093529092015460ff16158015928201929092529190819061060857505080516020820151610611565b50506000546001545b6127108583020487111561062b576000935050505061064d565b61271085820204861115610645576000935050505061064d565b600193505050505b9392505050565b604051806060016040528060008152602001600081526020016000151581525090565b80356001600160a01b038116811461068e57600080fd5b92915050565b6000602082840312156106a5578081fd5b61064d8383610677565b600080604083850312156106c1578081fd5b6106cb8484610677565b91506106da8460208501610677565b90509250929050565b6000806000606084860312156106f7578081fd5b6107018585610677565b95602085013595506040909401359392505050565b600060208284031215610727578081fd5b8151801515811461064d578182fd5b600060208284031215610747578081fd5b5035919050565b600080600080600060a08688031215610765578081fd5b505083359560208501359550604085013594606081013594506080013592509050565b6001600160a01b0391909116815260200190565b901515815260200190565b6020808252600b908201526a08585d5d1a1bdc9a5e995960aa1b604082015260600190565b90815260200190565b92835260208301919091521515604082015260600190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a0019056fea264697066735822122076eaa6acd1aa009409b66efc56821ea03f080d647eec73c2a3c73b1a1d0e7dc864736f6c634300060c0033",
  "deployedSourceMap": "680:3440:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:337;;;;;;:::i;:::-;;:::i;:::-;;1944:169;;;;;;:::i;:::-;;:::i;2462:120::-;;;;;;:::i;:::-;;:::i;987:41::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;795:31;;;:::i;:::-;;;;;;;:::i;924:25::-;;;:::i;832:29::-;;;:::i;955:25::-;;;:::i;1759:179::-;;;;;;:::i;:::-;;:::i;1441:153::-;;;;;;:::i;:::-;;:::i;2588:274::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;867:50::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1600:153::-;;;;;;:::i;:::-;;:::i;2119:337::-;1201:10;;-1:-1:-1;;;;;1201:10:10;1187;:24;;:52;;-1:-1:-1;1229:10:10;;-1:-1:-1;;;;;1229:10:10;1215;:24;1187:52;1179:76;;;;-1:-1:-1;;;1179:76:10;;;;;;;:::i;:::-;;;;;;;;;783:6:::1;2289:15;:25;2281:34;;;::::0;::::1;;783:6;2333:17;:27;2325:36;;;::::0;::::1;;2401:48;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;2444:4:::1;2401:48:::0;;;;;;-1:-1:-1;;;;;2371:27:10;;;::::1;-1:-1:-1::0;2371:27:10;;;:16:::1;:27:::0;;;;;;;;:78;;;;;;;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;2371:78:10::1;::::0;::::1;;::::0;;;::::1;::::0;;2119:337::o;1944:169::-;1201:10;;-1:-1:-1;;;;;1201:10:10;1187;:24;;:52;;-1:-1:-1;1229:10:10;;-1:-1:-1;;;;;1229:10:10;1215;:24;1187:52;1179:76;;;;-1:-1:-1;;;1179:76:10;;;;;;;:::i;:::-;783:6:::1;2038:15;:25;2030:34;;;::::0;::::1;;2074:14;:32:::0;1944:169::o;2462:120::-;1201:10;;-1:-1:-1;;;;;1201:10:10;1187;:24;;:52;;-1:-1:-1;1229:10:10;;-1:-1:-1;;;;;1229:10:10;1215;:24;1187:52;1179:76;;;;-1:-1:-1;;;1179:76:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;2549:17:10;;::::1;;::::0;;;:6:::1;:17;::::0;;;;:26;;-1:-1:-1;;;;;;2549:26:10::1;::::0;;;::::1;;::::0;;2462:120::o;987:41::-;;;;;;;;;;;;-1:-1:-1;;;;;987:41:10;;:::o;795:31::-;;;;:::o;924:25::-;;;-1:-1:-1;;;;;924:25:10;;:::o;832:29::-;;;;:::o;955:25::-;;;-1:-1:-1;;;;;955:25:10;;:::o;1759:179::-;1201:10;;-1:-1:-1;;;;;1201:10:10;1187;:24;;:52;;-1:-1:-1;1229:10:10;;-1:-1:-1;;;;;1229:10:10;1215;:24;1187:52;1179:76;;;;-1:-1:-1;;;1179:76:10;;;;;;;:::i;:::-;783:6:::1;1857:17;:27;1849:36;;;::::0;::::1;;1895:16;:36:::0;1759:179::o;1441:153::-;1093:10;;-1:-1:-1;;;;;1093:10:10;1079;:24;1071:48;;;;-1:-1:-1;;;1071:48:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;1527:25:10;::::1;1519:34;;;::::0;::::1;;1563:10;:24:::0;;-1:-1:-1;;;;;;1563:24:10::1;-1:-1:-1::0;;;;;1563:24:10;;;::::1;::::0;;;::::1;::::0;;1441:153::o;2588:274::-;2767:4;2790:65;2801:6;2809:4;2815:11;2828:15;2845:9;2790:10;:65::i;:::-;2783:72;;2588:274;;;;;;;;:::o;867:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1600:153::-;1093:10;;-1:-1:-1;;;;;1093:10:10;1079;:24;1071:48;;;;-1:-1:-1;;;1071:48:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;1686:25:10;::::1;1678:34;;;::::0;::::1;;1722:10;:24:::0;;-1:-1:-1;;;;;;1722:24:10::1;-1:-1:-1::0;;;;;1722:24:10;;;::::1;::::0;;;::::1;::::0;;1600:153::o;2868:475::-;3097:10;3052:4;3090:18;;;:6;:18;;;;;;-1:-1:-1;;;;;3090:18:10;3123:25;3119:108;;3171:45;3192:6;3200:4;3206:9;3171:20;:45::i;:::-;3164:52;;;;;3119:108;3244:92;;-1:-1:-1;;;3244:92:10;;-1:-1:-1;;;;;3244:36:10;;;;;:92;;3281:6;;3289:4;;3295:11;;3308:15;;3325:10;;3244:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3237:99;2868:475;-1:-1:-1;;;;;;;2868:475:10:o;3349:769::-;3484:4;3500:20;;:::i;:::-;-1:-1:-1;3540:10:10;3523:28;;;;:16;:28;;;;;;;;3500:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3523:28;;;3629:253;;-1:-1:-1;;3682:23:10;;3737:21;;;;3629:253;;;-1:-1:-1;;3809:16:10;;3857:14;;3629:253;783:6;3908:30;;;3907:42;3896:7;:54;3892:97;;;3973:5;3966:12;;;;;;;3892:97;783:6;4012:28;;;4011:40;4002:5;:50;3998:93;;;4075:5;4068:12;;;;;;;3998:93;4107:4;4100:11;;;;;3349:769;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;72:20;;-1:-1;;;;;6267:54;;6850:35;;6840:2;;6899:1;;6889:12;6840:2;57:78;;;;:::o;414:241::-;;518:2;506:9;497:7;493:23;489:32;486:2;;;-1:-1;;524:12;486:2;586:53;631:7;607:22;586:53;:::i;662:366::-;;;783:2;771:9;762:7;758:23;754:32;751:2;;;-1:-1;;789:12;751:2;851:53;896:7;872:22;851:53;:::i;:::-;841:63;;959:53;1004:7;941:2;984:9;980:22;959:53;:::i;:::-;949:63;;745:283;;;;;:::o;1035:491::-;;;;1173:2;1161:9;1152:7;1148:23;1144:32;1141:2;;;-1:-1;;1179:12;1141:2;1241:53;1286:7;1262:22;1241:53;:::i;:::-;1231:63;1331:2;1370:22;;344:20;;-1:-1;1439:2;1478:22;;;344:20;;1135:391;-1:-1;;;1135:391::o;1533:257::-;;1645:2;1633:9;1624:7;1620:23;1616:32;1613:2;;;-1:-1;;1651:12;1613:2;223:6;217:13;6996:5;6179:13;6172:21;6974:5;6971:32;6961:2;;-1:-1;;7007:12;1797:241;;1901:2;1889:9;1880:7;1876:23;1872:32;1869:2;;;-1:-1;;1907:12;1869:2;-1:-1;344:20;;1863:175;-1:-1;1863:175::o;2045:743::-;;;;;;2217:3;2205:9;2196:7;2192:23;2188:33;2185:2;;;-1:-1;;2224:12;2185:2;-1:-1;;344:20;;;2376:2;2415:22;;344:20;;-1:-1;2484:2;2523:22;;344:20;;2592:2;2631:22;;344:20;;-1:-1;2700:3;2740:22;344:20;;-1:-1;2179:609;-1:-1;2179:609::o;3615:222::-;-1:-1;;;;;6267:54;;;;3015:37;;3742:2;3727:18;;3713:124::o;3844:210::-;6179:13;;6172:21;3129:34;;3965:2;3950:18;;3936:118::o;4061:416::-;4261:2;4275:47;;;3400:2;4246:18;;;5947:19;-1:-1;;;5987:14;;;3416:34;3469:12;;;4232:245::o;4484:222::-;3566:37;;;4611:2;4596:18;;4582:124::o;4713:432::-;3566:37;;;5054:2;5039:18;;3566:37;;;;6179:13;6172:21;5131:2;5116:18;;3129:34;4890:2;4875:18;;4861:284::o;5152:684::-;3566:37;;;5564:2;5549:18;;3566:37;;;;5647:2;5632:18;;3566:37;;;;5730:2;5715:18;;3566:37;-1:-1;;;;;6267:54;5821:3;5806:19;;2874:58;5399:3;5384:19;;5370:466::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    680,
    4120
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D969932 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xAB033EA9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xC70FA00B EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xC9354337 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xD4A22BDE EQ PUSH2 0x1CC JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x7D969932 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x88A8D602 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x950B3D73 EQ PUSH2 0x164 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0xFD31F0 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xEF5EE02 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x1AFDC5A2 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x27FFF0DB EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x4A5D0943 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x14C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x121 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0x694 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x121 PUSH2 0x37A JUMP JUMPDEST PUSH2 0x13F PUSH2 0x389 JUMP JUMPDEST PUSH2 0x121 PUSH2 0x38F JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x39E JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x694 JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x74E JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x694 JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7D5 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x694 JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x202 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 LT PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2710 DUP3 LT PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x1 DUP5 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP3 DUP4 SWAP1 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SWAP4 MLOAD DUP5 SSTORE SWAP2 MLOAD SWAP1 DUP4 ADD SSTORE SWAP2 MLOAD SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x2BD JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x2710 DUP2 LT PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x30F JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x32B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x3C1 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x3DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x2710 DUP2 LT PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x41A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45E DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x4EC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x51D JUMPI PUSH2 0x515 DUP8 DUP8 DUP6 PUSH2 0x5AC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE53EC13F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xE53EC13F SWAP1 PUSH2 0x551 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B6 PUSH2 0x654 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x608 JUMPI POP POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x611 JUMP JUMPDEST POP POP PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD JUMPDEST PUSH2 0x2710 DUP6 DUP4 MUL DIV DUP8 GT ISZERO PUSH2 0x62B JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x64D JUMP JUMPDEST PUSH2 0x2710 DUP6 DUP3 MUL DIV DUP7 GT ISZERO PUSH2 0x645 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x64D JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A5 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x64D DUP4 DUP4 PUSH2 0x677 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6C1 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6CB DUP5 DUP5 PUSH2 0x677 JUMP JUMPDEST SWAP2 POP PUSH2 0x6DA DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x677 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6F7 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x701 DUP6 DUP6 PUSH2 0x677 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x727 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x64D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x747 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x765 JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP4 CALLDATALOAD SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xEAA6ACD1AA009409B66EFC56821EA03F080D647EEC73C2 LOG3 0xC7 EXTCODESIZE BYTE SAR 0xE PUSH30 0xC864736F6C634300060C0033000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        680,
        4120
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCE"
    },
    "25": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7D969932"
    },
    "38": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "GT",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xAB033EA9"
    },
    "49": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "GT",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xAB033EA9"
    },
    "60": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "EQ",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "64": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC70FA00B"
    },
    "71": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "EQ",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18A"
    },
    "75": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC9354337"
    },
    "82": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "EQ",
      "path": "10"
    },
    "83": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AA"
    },
    "86": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "88": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD4A22BDE"
    },
    "93": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "EQ",
      "path": "10"
    },
    "94": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CC"
    },
    "97": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "98": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCE"
    },
    "101": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMP",
      "path": "10"
    },
    "102": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "103": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "104": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7D969932"
    },
    "109": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "EQ",
      "path": "10"
    },
    "110": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x154"
    },
    "113": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "114": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "115": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x88A8D602"
    },
    "120": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "EQ",
      "path": "10"
    },
    "121": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15C"
    },
    "124": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "125": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "126": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x950B3D73"
    },
    "131": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "EQ",
      "path": "10"
    },
    "132": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x164"
    },
    "135": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCE"
    },
    "139": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMP",
      "path": "10"
    },
    "140": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "141": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "142": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xFD31F0"
    },
    "146": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "EQ",
      "path": "10"
    },
    "147": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD3"
    },
    "150": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "151": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "152": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xEF5EE02"
    },
    "157": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "EQ",
      "path": "10"
    },
    "158": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE8"
    },
    "161": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "162": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "163": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1AFDC5A2"
    },
    "168": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "EQ",
      "path": "10"
    },
    "169": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFB"
    },
    "172": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "173": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "174": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x27FFF0DB"
    },
    "179": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "EQ",
      "path": "10"
    },
    "180": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10E"
    },
    "183": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "184": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "185": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x4A5D0943"
    },
    "190": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "EQ",
      "path": "10"
    },
    "191": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x137"
    },
    "194": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "195": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "196": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5AA6E675"
    },
    "201": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "EQ",
      "path": "10"
    },
    "202": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14C"
    },
    "205": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "206": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "207": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "210": {
      "first_revert": true,
      "fn": null,
      "offset": [
        680,
        4120
      ],
      "op": "REVERT",
      "path": "10"
    },
    "211": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2119,
        2456
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "212": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2119,
        2456
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE6"
    },
    "215": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2119,
        2456
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE1"
    },
    "218": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2119,
        2456
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "219": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2119,
        2456
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "221": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2119,
        2456
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6E3"
    },
    "224": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "jump": "i",
      "offset": [
        2119,
        2456
      ],
      "op": "JUMP",
      "path": "10"
    },
    "225": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2119,
        2456
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "226": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2119,
        2456
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DF"
    },
    "229": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "jump": "i",
      "offset": [
        2119,
        2456
      ],
      "op": "JUMP",
      "path": "10"
    },
    "230": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2119,
        2456
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "231": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2119,
        2456
      ],
      "op": "STOP",
      "path": "10"
    },
    "232": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1944,
        2113
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "233": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1944,
        2113
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE6"
    },
    "236": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1944,
        2113
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF6"
    },
    "239": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1944,
        2113
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "240": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1944,
        2113
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "242": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1944,
        2113
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x736"
    },
    "245": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "jump": "i",
      "offset": [
        1944,
        2113
      ],
      "op": "JUMP",
      "path": "10"
    },
    "246": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1944,
        2113
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "247": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1944,
        2113
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A"
    },
    "250": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "jump": "i",
      "offset": [
        1944,
        2113
      ],
      "op": "JUMP",
      "path": "10"
    },
    "251": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2462,
        2582
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "252": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2462,
        2582
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE6"
    },
    "255": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2462,
        2582
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x109"
    },
    "258": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2462,
        2582
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "259": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2462,
        2582
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "261": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2462,
        2582
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6AF"
    },
    "264": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        2462,
        2582
      ],
      "op": "JUMP",
      "path": "10"
    },
    "265": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2462,
        2582
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "266": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2462,
        2582
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2EC"
    },
    "269": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        2462,
        2582
      ],
      "op": "JUMP",
      "path": "10"
    },
    "270": {
      "offset": [
        987,
        1028
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "271": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x121"
    },
    "274": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11C"
    },
    "277": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "278": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "280": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x694"
    },
    "283": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        987,
        1028
      ],
      "op": "JUMP",
      "path": "10"
    },
    "284": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "285": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x359"
    },
    "288": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        987,
        1028
      ],
      "op": "JUMP",
      "path": "10"
    },
    "289": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "290": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "292": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "293": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12E"
    },
    "296": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "297": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "298": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x788"
    },
    "301": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        987,
        1028
      ],
      "op": "JUMP",
      "path": "10"
    },
    "302": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "303": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "305": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "306": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "DUP1",
      "path": "10"
    },
    "307": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "308": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "SUB",
      "path": "10"
    },
    "309": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "310": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "RETURN",
      "path": "10"
    },
    "311": {
      "offset": [
        795,
        826
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "312": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        795,
        826
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13F"
    },
    "315": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        795,
        826
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x374"
    },
    "318": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        795,
        826
      ],
      "op": "JUMP",
      "path": "10"
    },
    "319": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        795,
        826
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "320": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        795,
        826
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "322": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        795,
        826
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "323": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        795,
        826
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12E"
    },
    "326": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        795,
        826
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "327": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        795,
        826
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "328": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        795,
        826
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7CC"
    },
    "331": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        795,
        826
      ],
      "op": "JUMP",
      "path": "10"
    },
    "332": {
      "offset": [
        924,
        949
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "333": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        924,
        949
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x121"
    },
    "336": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        924,
        949
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x37A"
    },
    "339": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        924,
        949
      ],
      "op": "JUMP",
      "path": "10"
    },
    "340": {
      "offset": [
        832,
        861
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "341": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        832,
        861
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13F"
    },
    "344": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        832,
        861
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x389"
    },
    "347": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        832,
        861
      ],
      "op": "JUMP",
      "path": "10"
    },
    "348": {
      "offset": [
        955,
        980
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "349": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        955,
        980
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x121"
    },
    "352": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        955,
        980
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x38F"
    },
    "355": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        955,
        980
      ],
      "op": "JUMP",
      "path": "10"
    },
    "356": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1759,
        1938
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "357": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1759,
        1938
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE6"
    },
    "360": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1759,
        1938
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x172"
    },
    "363": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1759,
        1938
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "364": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1759,
        1938
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "366": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1759,
        1938
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x736"
    },
    "369": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "jump": "i",
      "offset": [
        1759,
        1938
      ],
      "op": "JUMP",
      "path": "10"
    },
    "370": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1759,
        1938
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "371": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1759,
        1938
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x39E"
    },
    "374": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "jump": "i",
      "offset": [
        1759,
        1938
      ],
      "op": "JUMP",
      "path": "10"
    },
    "375": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1441,
        1594
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "376": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1441,
        1594
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE6"
    },
    "379": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1441,
        1594
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x185"
    },
    "382": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1441,
        1594
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "383": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1441,
        1594
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "385": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1441,
        1594
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x694"
    },
    "388": {
      "fn": "CommonHealthCheck.setGovernance",
      "jump": "i",
      "offset": [
        1441,
        1594
      ],
      "op": "JUMP",
      "path": "10"
    },
    "389": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1441,
        1594
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "390": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1441,
        1594
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F0"
    },
    "393": {
      "fn": "CommonHealthCheck.setGovernance",
      "jump": "i",
      "offset": [
        1441,
        1594
      ],
      "op": "JUMP",
      "path": "10"
    },
    "394": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "395": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19D"
    },
    "398": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x198"
    },
    "401": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "402": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "404": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x74E"
    },
    "407": {
      "fn": "CommonHealthCheck.check",
      "jump": "i",
      "offset": [
        2588,
        2862
      ],
      "op": "JUMP",
      "path": "10"
    },
    "408": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "409": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x44F"
    },
    "412": {
      "fn": "CommonHealthCheck.check",
      "jump": "i",
      "offset": [
        2588,
        2862
      ],
      "op": "JUMP",
      "path": "10"
    },
    "413": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "414": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "416": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "417": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12E"
    },
    "420": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "421": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "422": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x79C"
    },
    "425": {
      "fn": "CommonHealthCheck.check",
      "jump": "i",
      "offset": [
        2588,
        2862
      ],
      "op": "JUMP",
      "path": "10"
    },
    "426": {
      "offset": [
        867,
        917
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "427": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1BD"
    },
    "430": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B8"
    },
    "433": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "434": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "436": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x694"
    },
    "439": {
      "fn": "CommonHealthCheck.check",
      "jump": "i",
      "offset": [
        867,
        917
      ],
      "op": "JUMP",
      "path": "10"
    },
    "440": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "441": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x46A"
    },
    "444": {
      "fn": "CommonHealthCheck.check",
      "jump": "i",
      "offset": [
        867,
        917
      ],
      "op": "JUMP",
      "path": "10"
    },
    "445": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "446": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "448": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "449": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12E"
    },
    "452": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "453": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "454": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "455": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "456": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7D5"
    },
    "459": {
      "fn": "CommonHealthCheck.check",
      "jump": "i",
      "offset": [
        867,
        917
      ],
      "op": "JUMP",
      "path": "10"
    },
    "460": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1600,
        1753
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "461": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1600,
        1753
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE6"
    },
    "464": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1600,
        1753
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DA"
    },
    "467": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1600,
        1753
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "468": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1600,
        1753
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "470": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1600,
        1753
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x694"
    },
    "473": {
      "fn": "CommonHealthCheck.setManagement",
      "jump": "i",
      "offset": [
        1600,
        1753
      ],
      "op": "JUMP",
      "path": "10"
    },
    "474": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1600,
        1753
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "475": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1600,
        1753
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x48D"
    },
    "478": {
      "fn": "CommonHealthCheck.setManagement",
      "jump": "i",
      "offset": [
        1600,
        1753
      ],
      "op": "JUMP",
      "path": "10"
    },
    "479": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2119,
        2456
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "480": {
      "offset": [
        1201,
        1211
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "482": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1201,
        1211
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "489": {
      "op": "SHL"
    },
    "490": {
      "op": "SUB"
    },
    "491": {
      "offset": [
        1201,
        1211
      ],
      "op": "AND",
      "path": "10"
    },
    "492": {
      "offset": [
        1187,
        1197
      ],
      "op": "CALLER",
      "path": "10"
    },
    "493": {
      "offset": [
        1187,
        1211
      ],
      "op": "EQ",
      "path": "10"
    },
    "494": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1187,
        1211
      ],
      "op": "DUP1",
      "path": "10"
    },
    "495": {
      "offset": [
        1187,
        1239
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x202"
    },
    "498": {
      "offset": [
        1187,
        1239
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "499": {
      "op": "POP"
    },
    "500": {
      "offset": [
        1229,
        1239
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "502": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1229,
        1239
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "509": {
      "op": "SHL"
    },
    "510": {
      "op": "SUB"
    },
    "511": {
      "offset": [
        1229,
        1239
      ],
      "op": "AND",
      "path": "10"
    },
    "512": {
      "offset": [
        1215,
        1225
      ],
      "op": "CALLER",
      "path": "10"
    },
    "513": {
      "offset": [
        1215,
        1239
      ],
      "op": "EQ",
      "path": "10"
    },
    "514": {
      "offset": [
        1187,
        1239
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "515": {
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x227"
    },
    "518": {
      "offset": [
        1179,
        1255
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "519": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "521": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "522": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "526": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "528": {
      "op": "SHL"
    },
    "529": {
      "offset": [
        1179,
        1255
      ],
      "op": "DUP2",
      "path": "10"
    },
    "530": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "531": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "533": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "ADD",
      "path": "10"
    },
    "534": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21E"
    },
    "537": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "538": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A7"
    },
    "541": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "jump": "i",
      "offset": [
        1179,
        1255
      ],
      "op": "JUMP",
      "path": "10"
    },
    "542": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "543": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "545": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "546": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "DUP1",
      "path": "10"
    },
    "547": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "548": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "SUB",
      "path": "10"
    },
    "549": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "550": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "REVERT",
      "path": "10"
    },
    "551": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        1179,
        1255
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "552": {
      "offset": [
        783,
        789
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2710"
    },
    "555": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2289,
        2304
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 0
    },
    "556": {
      "branch": 22,
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2289,
        2314
      ],
      "op": "LT",
      "path": "10"
    },
    "557": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2281,
        2315
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x235"
    },
    "560": {
      "branch": 22,
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2281,
        2315
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "561": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2281,
        2315
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "563": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2281,
        2315
      ],
      "op": "DUP1",
      "path": "10"
    },
    "564": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2281,
        2315
      ],
      "op": "REVERT",
      "path": "10"
    },
    "565": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2281,
        2315
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "566": {
      "offset": [
        783,
        789
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2710"
    },
    "569": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2333,
        2350
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 1
    },
    "570": {
      "branch": 23,
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2333,
        2360
      ],
      "op": "LT",
      "path": "10"
    },
    "571": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2325,
        2361
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x243"
    },
    "574": {
      "branch": 23,
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2325,
        2361
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "575": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2325,
        2361
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "577": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2325,
        2361
      ],
      "op": "DUP1",
      "path": "10"
    },
    "578": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2325,
        2361
      ],
      "op": "REVERT",
      "path": "10"
    },
    "579": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2325,
        2361
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "580": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 2,
      "value": "0x40"
    },
    "582": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "DUP1",
      "path": "10"
    },
    "583": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "584": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "586": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "DUP2",
      "path": "10"
    },
    "587": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "ADD",
      "path": "10"
    },
    "588": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "DUP3",
      "path": "10"
    },
    "589": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "590": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "591": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "DUP4",
      "path": "10"
    },
    "592": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "593": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "595": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "DUP1",
      "path": "10"
    },
    "596": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "DUP5",
      "path": "10"
    },
    "597": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "ADD",
      "path": "10"
    },
    "598": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "599": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "DUP4",
      "path": "10"
    },
    "600": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "601": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2444,
        2448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "603": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "DUP5",
      "path": "10"
    },
    "604": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "DUP4",
      "path": "10"
    },
    "605": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "ADD",
      "path": "10"
    },
    "606": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "DUP2",
      "path": "10"
    },
    "607": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "DUP2",
      "path": "10"
    },
    "608": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2401,
        2449
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "SUB"
    },
    "617": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "618": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "619": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "620": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "AND",
      "path": "10"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "623": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "624": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "DUP2",
      "path": "10"
    },
    "625": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "626": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2387
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "628": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "629": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "DUP4",
      "path": "10"
    },
    "630": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "631": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "632": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "633": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "634": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "635": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2398
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "636": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "637": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "638": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "DUP5",
      "path": "10"
    },
    "639": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "640": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "641": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "642": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "643": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "DUP4",
      "path": "10"
    },
    "644": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "ADD",
      "path": "10"
    },
    "645": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "646": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "647": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "648": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "649": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "ADD",
      "path": "10"
    },
    "650": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "DUP1",
      "path": "10"
    },
    "651": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "652": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "654": {
      "op": "NOT"
    },
    "655": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "AND",
      "path": "10"
    },
    "656": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "657": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "658": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "659": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "660": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "661": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "662": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "OR",
      "path": "10"
    },
    "663": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "664": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "offset": [
        2371,
        2449
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "665": {
      "fn": "CommonHealthCheck.setStrategyLimits",
      "jump": "o",
      "offset": [
        2119,
        2456
      ],
      "op": "JUMP",
      "path": "10"
    },
    "666": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1944,
        2113
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "667": {
      "offset": [
        1201,
        1211
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "669": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1201,
        1211
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "676": {
      "op": "SHL"
    },
    "677": {
      "op": "SUB"
    },
    "678": {
      "offset": [
        1201,
        1211
      ],
      "op": "AND",
      "path": "10"
    },
    "679": {
      "offset": [
        1187,
        1197
      ],
      "op": "CALLER",
      "path": "10"
    },
    "680": {
      "offset": [
        1187,
        1211
      ],
      "op": "EQ",
      "path": "10"
    },
    "681": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1187,
        1211
      ],
      "op": "DUP1",
      "path": "10"
    },
    "682": {
      "offset": [
        1187,
        1239
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2BD"
    },
    "685": {
      "offset": [
        1187,
        1239
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "686": {
      "op": "POP"
    },
    "687": {
      "offset": [
        1229,
        1239
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "689": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1229,
        1239
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "696": {
      "op": "SHL"
    },
    "697": {
      "op": "SUB"
    },
    "698": {
      "offset": [
        1229,
        1239
      ],
      "op": "AND",
      "path": "10"
    },
    "699": {
      "offset": [
        1215,
        1225
      ],
      "op": "CALLER",
      "path": "10"
    },
    "700": {
      "offset": [
        1215,
        1239
      ],
      "op": "EQ",
      "path": "10"
    },
    "701": {
      "offset": [
        1187,
        1239
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "702": {
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D9"
    },
    "705": {
      "offset": [
        1179,
        1255
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "706": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "708": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "709": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "713": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "715": {
      "op": "SHL"
    },
    "716": {
      "offset": [
        1179,
        1255
      ],
      "op": "DUP2",
      "path": "10"
    },
    "717": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "718": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "720": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "ADD",
      "path": "10"
    },
    "721": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21E"
    },
    "724": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "725": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A7"
    },
    "728": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "jump": "i",
      "offset": [
        1179,
        1255
      ],
      "op": "JUMP",
      "path": "10"
    },
    "729": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "730": {
      "offset": [
        783,
        789
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2710"
    },
    "733": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        2038,
        2053
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 3
    },
    "734": {
      "branch": 24,
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        2038,
        2063
      ],
      "op": "LT",
      "path": "10"
    },
    "735": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        2030,
        2064
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E7"
    },
    "738": {
      "branch": 24,
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        2030,
        2064
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "739": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        2030,
        2064
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "741": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        2030,
        2064
      ],
      "op": "DUP1",
      "path": "10"
    },
    "742": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        2030,
        2064
      ],
      "op": "REVERT",
      "path": "10"
    },
    "743": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        2030,
        2064
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "744": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        2074,
        2088
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 4,
      "value": "0x1"
    },
    "746": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "offset": [
        2074,
        2106
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "747": {
      "fn": "CommonHealthCheck.setlossLimitRatio",
      "jump": "o",
      "offset": [
        1944,
        2113
      ],
      "op": "JUMP",
      "path": "10"
    },
    "748": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2462,
        2582
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "749": {
      "offset": [
        1201,
        1211
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "751": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        1201,
        1211
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "op": "SUB"
    },
    "760": {
      "offset": [
        1201,
        1211
      ],
      "op": "AND",
      "path": "10"
    },
    "761": {
      "offset": [
        1187,
        1197
      ],
      "op": "CALLER",
      "path": "10"
    },
    "762": {
      "offset": [
        1187,
        1211
      ],
      "op": "EQ",
      "path": "10"
    },
    "763": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        1187,
        1211
      ],
      "op": "DUP1",
      "path": "10"
    },
    "764": {
      "offset": [
        1187,
        1239
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x30F"
    },
    "767": {
      "offset": [
        1187,
        1239
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "768": {
      "op": "POP"
    },
    "769": {
      "offset": [
        1229,
        1239
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "771": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        1229,
        1239
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "778": {
      "op": "SHL"
    },
    "779": {
      "op": "SUB"
    },
    "780": {
      "offset": [
        1229,
        1239
      ],
      "op": "AND",
      "path": "10"
    },
    "781": {
      "offset": [
        1215,
        1225
      ],
      "op": "CALLER",
      "path": "10"
    },
    "782": {
      "offset": [
        1215,
        1239
      ],
      "op": "EQ",
      "path": "10"
    },
    "783": {
      "offset": [
        1187,
        1239
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "784": {
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x32B"
    },
    "787": {
      "offset": [
        1179,
        1255
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "788": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "790": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        1179,
        1255
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "791": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "795": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "797": {
      "op": "SHL"
    },
    "798": {
      "offset": [
        1179,
        1255
      ],
      "op": "DUP2",
      "path": "10"
    },
    "799": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        1179,
        1255
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "800": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "802": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        1179,
        1255
      ],
      "op": "ADD",
      "path": "10"
    },
    "803": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21E"
    },
    "806": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        1179,
        1255
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "807": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A7"
    },
    "810": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "i",
      "offset": [
        1179,
        1255
      ],
      "op": "JUMP",
      "path": "10"
    },
    "811": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        1179,
        1255
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "op": "SUB"
    },
    "820": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2566
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 5
    },
    "821": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2566
      ],
      "op": "DUP3",
      "path": "10"
    },
    "822": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2566
      ],
      "op": "AND",
      "path": "10"
    },
    "823": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "825": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2566
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "826": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2566
      ],
      "op": "DUP2",
      "path": "10"
    },
    "827": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2566
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "828": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2555
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "830": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "832": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2566
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "833": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "835": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2566
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "836": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2566
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "837": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2575
      ],
      "op": "DUP1",
      "path": "10"
    },
    "838": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2575
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "845": {
      "op": "SHL"
    },
    "846": {
      "op": "SUB"
    },
    "847": {
      "op": "NOT"
    },
    "848": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2575
      ],
      "op": "AND",
      "path": "10"
    },
    "849": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2575
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "850": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2575
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "851": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2575
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "852": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2575
      ],
      "op": "AND",
      "path": "10"
    },
    "853": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2575
      ],
      "op": "OR",
      "path": "10"
    },
    "854": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2575
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "855": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        2549,
        2575
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "856": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "o",
      "offset": [
        2462,
        2582
      ],
      "op": "JUMP",
      "path": "10"
    },
    "857": {
      "offset": [
        987,
        1028
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "858": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "860": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "862": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "863": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "865": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "866": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "DUP2",
      "path": "10"
    },
    "867": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "868": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "870": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "871": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "872": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "op": "SUB"
    },
    "881": {
      "offset": [
        987,
        1028
      ],
      "op": "AND",
      "path": "10"
    },
    "882": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        987,
        1028
      ],
      "op": "DUP2",
      "path": "10"
    },
    "883": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "o",
      "offset": [
        987,
        1028
      ],
      "op": "JUMP",
      "path": "10"
    },
    "884": {
      "offset": [
        795,
        826
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "885": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        795,
        826
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "887": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        795,
        826
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "888": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        795,
        826
      ],
      "op": "DUP2",
      "path": "10"
    },
    "889": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "o",
      "offset": [
        795,
        826
      ],
      "op": "JUMP",
      "path": "10"
    },
    "890": {
      "offset": [
        924,
        949
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "891": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        924,
        949
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "893": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        924,
        949
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "900": {
      "op": "SHL"
    },
    "901": {
      "op": "SUB"
    },
    "902": {
      "offset": [
        924,
        949
      ],
      "op": "AND",
      "path": "10"
    },
    "903": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        924,
        949
      ],
      "op": "DUP2",
      "path": "10"
    },
    "904": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "o",
      "offset": [
        924,
        949
      ],
      "op": "JUMP",
      "path": "10"
    },
    "905": {
      "offset": [
        832,
        861
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "906": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        832,
        861
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "908": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        832,
        861
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "909": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        832,
        861
      ],
      "op": "DUP2",
      "path": "10"
    },
    "910": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "o",
      "offset": [
        832,
        861
      ],
      "op": "JUMP",
      "path": "10"
    },
    "911": {
      "offset": [
        955,
        980
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "912": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        955,
        980
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "914": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        955,
        980
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "921": {
      "op": "SHL"
    },
    "922": {
      "op": "SUB"
    },
    "923": {
      "offset": [
        955,
        980
      ],
      "op": "AND",
      "path": "10"
    },
    "924": {
      "fn": "CommonHealthCheck.setCheck",
      "offset": [
        955,
        980
      ],
      "op": "DUP2",
      "path": "10"
    },
    "925": {
      "fn": "CommonHealthCheck.setCheck",
      "jump": "o",
      "offset": [
        955,
        980
      ],
      "op": "JUMP",
      "path": "10"
    },
    "926": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1759,
        1938
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "927": {
      "offset": [
        1201,
        1211
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "929": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1201,
        1211
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "936": {
      "op": "SHL"
    },
    "937": {
      "op": "SUB"
    },
    "938": {
      "offset": [
        1201,
        1211
      ],
      "op": "AND",
      "path": "10"
    },
    "939": {
      "offset": [
        1187,
        1197
      ],
      "op": "CALLER",
      "path": "10"
    },
    "940": {
      "offset": [
        1187,
        1211
      ],
      "op": "EQ",
      "path": "10"
    },
    "941": {
      "branch": 25,
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1187,
        1211
      ],
      "op": "DUP1",
      "path": "10"
    },
    "942": {
      "offset": [
        1187,
        1239
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3C1"
    },
    "945": {
      "branch": 25,
      "offset": [
        1187,
        1239
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "946": {
      "op": "POP"
    },
    "947": {
      "offset": [
        1229,
        1239
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "949": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1229,
        1239
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "956": {
      "op": "SHL"
    },
    "957": {
      "op": "SUB"
    },
    "958": {
      "offset": [
        1229,
        1239
      ],
      "op": "AND",
      "path": "10"
    },
    "959": {
      "offset": [
        1215,
        1225
      ],
      "op": "CALLER",
      "path": "10"
    },
    "960": {
      "offset": [
        1215,
        1239
      ],
      "op": "EQ",
      "path": "10"
    },
    "961": {
      "offset": [
        1187,
        1239
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "962": {
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3DD"
    },
    "965": {
      "offset": [
        1179,
        1255
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "966": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "968": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "969": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "973": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "975": {
      "op": "SHL"
    },
    "976": {
      "offset": [
        1179,
        1255
      ],
      "op": "DUP2",
      "path": "10"
    },
    "977": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "978": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "980": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "ADD",
      "path": "10"
    },
    "981": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21E"
    },
    "984": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "985": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A7"
    },
    "988": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "jump": "i",
      "offset": [
        1179,
        1255
      ],
      "op": "JUMP",
      "path": "10"
    },
    "989": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1179,
        1255
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "990": {
      "offset": [
        783,
        789
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2710"
    },
    "993": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1857,
        1874
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 6
    },
    "994": {
      "branch": 26,
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1857,
        1884
      ],
      "op": "LT",
      "path": "10"
    },
    "995": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1849,
        1885
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3EB"
    },
    "998": {
      "branch": 26,
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1849,
        1885
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "999": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1849,
        1885
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1001": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1849,
        1885
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1002": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1849,
        1885
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1003": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1849,
        1885
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1004": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1895,
        1911
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 7,
      "value": "0x0"
    },
    "1006": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "offset": [
        1895,
        1931
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1007": {
      "fn": "CommonHealthCheck.setProfitLimitRatio",
      "jump": "o",
      "offset": [
        1759,
        1938
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1008": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1441,
        1594
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1009": {
      "offset": [
        1093,
        1103
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1011": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1093,
        1103
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "op": "SUB"
    },
    "1020": {
      "offset": [
        1093,
        1103
      ],
      "op": "AND",
      "path": "10"
    },
    "1021": {
      "offset": [
        1079,
        1089
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1022": {
      "offset": [
        1079,
        1103
      ],
      "op": "EQ",
      "path": "10"
    },
    "1023": {
      "offset": [
        1071,
        1119
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x41A"
    },
    "1026": {
      "offset": [
        1071,
        1119
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1027": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1071,
        1119
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1029": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1071,
        1119
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1030": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1036": {
      "op": "SHL"
    },
    "1037": {
      "offset": [
        1071,
        1119
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1038": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1071,
        1119
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1039": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1071,
        1119
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1041": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1071,
        1119
      ],
      "op": "ADD",
      "path": "10"
    },
    "1042": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1071,
        1119
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21E"
    },
    "1045": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1071,
        1119
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1046": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1071,
        1119
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A7"
    },
    "1049": {
      "fn": "CommonHealthCheck.setGovernance",
      "jump": "i",
      "offset": [
        1071,
        1119
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1050": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1071,
        1119
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1057": {
      "op": "SHL"
    },
    "1058": {
      "op": "SUB"
    },
    "1059": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1527,
        1552
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 8
    },
    "1060": {
      "branch": 27,
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1527,
        1552
      ],
      "op": "AND",
      "path": "10"
    },
    "1061": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1519,
        1553
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x42D"
    },
    "1064": {
      "branch": 27,
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1519,
        1553
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1065": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1519,
        1553
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1067": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1519,
        1553
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1068": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1519,
        1553
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1069": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1519,
        1553
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1070": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1563,
        1573
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 9,
      "value": "0x3"
    },
    "1072": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1563,
        1587
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1073": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1563,
        1587
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1080": {
      "op": "SHL"
    },
    "1081": {
      "op": "SUB"
    },
    "1082": {
      "op": "NOT"
    },
    "1083": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1563,
        1587
      ],
      "op": "AND",
      "path": "10"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1090": {
      "op": "SHL"
    },
    "1091": {
      "op": "SUB"
    },
    "1092": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1563,
        1587
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1093": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1563,
        1587
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1094": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1563,
        1587
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1095": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1563,
        1587
      ],
      "op": "AND",
      "path": "10"
    },
    "1096": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1563,
        1587
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1097": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1563,
        1587
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1098": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1563,
        1587
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1099": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1563,
        1587
      ],
      "op": "OR",
      "path": "10"
    },
    "1100": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1563,
        1587
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1101": {
      "fn": "CommonHealthCheck.setGovernance",
      "offset": [
        1563,
        1587
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1102": {
      "fn": "CommonHealthCheck.setGovernance",
      "jump": "o",
      "offset": [
        1441,
        1594
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1103": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1104": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2767,
        2771
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1106": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2790,
        2855
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 10,
      "value": "0x45E"
    },
    "1109": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2801,
        2807
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1110": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2809,
        2813
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1111": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2815,
        2826
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1112": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2828,
        2843
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1113": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2845,
        2854
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1114": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2790,
        2800
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4EC"
    },
    "1117": {
      "fn": "CommonHealthCheck.check",
      "jump": "i",
      "offset": [
        2790,
        2855
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1118": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2790,
        2855
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1119": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2783,
        2855
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1120": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2783,
        2855
      ],
      "op": "POP",
      "path": "10"
    },
    "1121": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1122": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "1123": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "1124": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "POP",
      "path": "10"
    },
    "1125": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "POP",
      "path": "10"
    },
    "1126": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "POP",
      "path": "10"
    },
    "1127": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "POP",
      "path": "10"
    },
    "1128": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        2588,
        2862
      ],
      "op": "POP",
      "path": "10"
    },
    "1129": {
      "fn": "CommonHealthCheck.check",
      "jump": "o",
      "offset": [
        2588,
        2862
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1130": {
      "offset": [
        867,
        917
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1131": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1133": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1135": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1136": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1137": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1138": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1140": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1141": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1142": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1143": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1145": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1146": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1147": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1148": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1149": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1150": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1152": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1153": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "ADD",
      "path": "10"
    },
    "1154": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1155": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1156": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1157": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1158": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "ADD",
      "path": "10"
    },
    "1159": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1160": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "1162": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "AND",
      "path": "10"
    },
    "1163": {
      "fn": "CommonHealthCheck.check",
      "offset": [
        867,
        917
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1164": {
      "fn": "CommonHealthCheck.check",
      "jump": "o",
      "offset": [
        867,
        917
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1165": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1600,
        1753
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1166": {
      "offset": [
        1093,
        1103
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1168": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1093,
        1103
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1175": {
      "op": "SHL"
    },
    "1176": {
      "op": "SUB"
    },
    "1177": {
      "offset": [
        1093,
        1103
      ],
      "op": "AND",
      "path": "10"
    },
    "1178": {
      "offset": [
        1079,
        1089
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1179": {
      "offset": [
        1079,
        1103
      ],
      "op": "EQ",
      "path": "10"
    },
    "1180": {
      "offset": [
        1071,
        1119
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4B7"
    },
    "1183": {
      "offset": [
        1071,
        1119
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1184": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1071,
        1119
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1186": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1071,
        1119
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1187": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1193": {
      "op": "SHL"
    },
    "1194": {
      "offset": [
        1071,
        1119
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1195": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1071,
        1119
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1196": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1071,
        1119
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1198": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1071,
        1119
      ],
      "op": "ADD",
      "path": "10"
    },
    "1199": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1071,
        1119
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21E"
    },
    "1202": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1071,
        1119
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1203": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1071,
        1119
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A7"
    },
    "1206": {
      "fn": "CommonHealthCheck.setManagement",
      "jump": "i",
      "offset": [
        1071,
        1119
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1207": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1071,
        1119
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1214": {
      "op": "SHL"
    },
    "1215": {
      "op": "SUB"
    },
    "1216": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1686,
        1711
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 11
    },
    "1217": {
      "branch": 28,
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1686,
        1711
      ],
      "op": "AND",
      "path": "10"
    },
    "1218": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1678,
        1712
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4CA"
    },
    "1221": {
      "branch": 28,
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1678,
        1712
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1222": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1678,
        1712
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1224": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1678,
        1712
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1225": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1678,
        1712
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1226": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1678,
        1712
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1227": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1722,
        1732
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 12,
      "value": "0x4"
    },
    "1229": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1722,
        1746
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1230": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1722,
        1746
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1237": {
      "op": "SHL"
    },
    "1238": {
      "op": "SUB"
    },
    "1239": {
      "op": "NOT"
    },
    "1240": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1722,
        1746
      ],
      "op": "AND",
      "path": "10"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1247": {
      "op": "SHL"
    },
    "1248": {
      "op": "SUB"
    },
    "1249": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1722,
        1746
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1250": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1722,
        1746
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1251": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1722,
        1746
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1252": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1722,
        1746
      ],
      "op": "AND",
      "path": "10"
    },
    "1253": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1722,
        1746
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1254": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1722,
        1746
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1255": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1722,
        1746
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1256": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1722,
        1746
      ],
      "op": "OR",
      "path": "10"
    },
    "1257": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1722,
        1746
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1258": {
      "fn": "CommonHealthCheck.setManagement",
      "offset": [
        1722,
        1746
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1259": {
      "fn": "CommonHealthCheck.setManagement",
      "jump": "o",
      "offset": [
        1600,
        1753
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1260": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        2868,
        3343
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1261": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3097,
        3107
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1262": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3052,
        3056
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1264": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3090,
        3108
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1265": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3090,
        3108
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1266": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3090,
        3108
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1267": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3090,
        3096
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "1269": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3090,
        3108
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1271": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3090,
        3108
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1272": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3090,
        3108
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1274": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3090,
        3108
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1275": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3090,
        3108
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1276": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3090,
        3108
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1283": {
      "op": "SHL"
    },
    "1284": {
      "op": "SUB"
    },
    "1285": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3090,
        3108
      ],
      "op": "AND",
      "path": "10"
    },
    "1286": {
      "branch": 29,
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3123,
        3148
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1287": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3119,
        3227
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x51D"
    },
    "1290": {
      "branch": 29,
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3119,
        3227
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1291": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3171,
        3216
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 13,
      "value": "0x515"
    },
    "1294": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3192,
        3198
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1295": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3200,
        3204
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1296": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3206,
        3215
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1297": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3171,
        3191
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5AC"
    },
    "1300": {
      "fn": "CommonHealthCheck._runChecks",
      "jump": "i",
      "offset": [
        3171,
        3216
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1301": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3171,
        3216
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1302": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3164,
        3216
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1303": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3164,
        3216
      ],
      "op": "POP",
      "path": "10"
    },
    "1304": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3164,
        3216
      ],
      "op": "POP",
      "path": "10"
    },
    "1305": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3164,
        3216
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x461"
    },
    "1308": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3164,
        3216
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1309": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3119,
        3227
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1310": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 14,
      "value": "0x40"
    },
    "1312": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1313": {
      "op": "PUSH4",
      "value": "0xE53EC13F"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1320": {
      "op": "SHL"
    },
    "1321": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1322": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1329": {
      "op": "SHL"
    },
    "1330": {
      "op": "SUB"
    },
    "1331": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3280
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1332": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3280
      ],
      "op": "AND",
      "path": "10"
    },
    "1333": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3280
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1334": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3280
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xE53EC13F"
    },
    "1339": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3280
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1340": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x551"
    },
    "1343": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1344": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3281,
        3287
      ],
      "op": "DUP11",
      "path": "10"
    },
    "1345": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3281,
        3287
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1346": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3289,
        3293
      ],
      "op": "DUP11",
      "path": "10"
    },
    "1347": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3289,
        3293
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1348": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3295,
        3306
      ],
      "op": "DUP11",
      "path": "10"
    },
    "1349": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3295,
        3306
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1350": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3308,
        3323
      ],
      "op": "DUP11",
      "path": "10"
    },
    "1351": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3308,
        3323
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1352": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3325,
        3335
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1353": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3325,
        3335
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1354": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1356": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "ADD",
      "path": "10"
    },
    "1357": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7ED"
    },
    "1360": {
      "fn": "CommonHealthCheck._runChecks",
      "jump": "i",
      "offset": [
        3244,
        3336
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1361": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1362": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1364": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1366": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1367": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1368": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1369": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "SUB",
      "path": "10"
    },
    "1370": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1371": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1372": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1373": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "1374": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1375": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1376": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1377": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x569"
    },
    "1380": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1381": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1383": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1384": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1385": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1386": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "POP",
      "path": "10"
    },
    "1387": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "GAS",
      "path": "10"
    },
    "1388": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "1389": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1390": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1391": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1392": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x57D"
    },
    "1395": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1396": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1397": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1399": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1400": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "1401": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1402": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1404": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1405": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1406": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "POP",
      "path": "10"
    },
    "1407": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "POP",
      "path": "10"
    },
    "1408": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "POP",
      "path": "10"
    },
    "1409": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "POP",
      "path": "10"
    },
    "1410": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1412": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1413": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1414": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1416": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "NOT",
      "path": "10"
    },
    "1417": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1419": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1420": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "ADD",
      "path": "10"
    },
    "1421": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "AND",
      "path": "10"
    },
    "1422": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1423": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "ADD",
      "path": "10"
    },
    "1424": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1425": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1427": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1428": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "POP",
      "path": "10"
    },
    "1429": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1430": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "ADD",
      "path": "10"
    },
    "1431": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1432": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5A1"
    },
    "1435": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1436": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1437": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x716"
    },
    "1440": {
      "fn": "CommonHealthCheck._runChecks",
      "jump": "i",
      "offset": [
        3244,
        3336
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1441": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3244,
        3336
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1442": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        3237,
        3336
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "1443": {
      "fn": "CommonHealthCheck._runChecks",
      "offset": [
        2868,
        3343
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "1444": {
      "op": "POP"
    },
    "1445": {
      "op": "POP"
    },
    "1446": {
      "op": "POP"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "op": "POP"
    },
    "1449": {
      "op": "POP"
    },
    "1450": {
      "op": "POP"
    },
    "1451": {
      "fn": "CommonHealthCheck._runChecks",
      "jump": "o",
      "offset": [
        2868,
        3343
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1452": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3349,
        4118
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1453": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3484,
        3488
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1455": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3520
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5B6"
    },
    "1458": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3520
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x654"
    },
    "1461": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "jump": "i",
      "offset": [
        3500,
        3520
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1462": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3520
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1463": {
      "op": "POP"
    },
    "1464": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3540,
        3550
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1465": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1467": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1468": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1469": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1470": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3539
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1472": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1474": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1475": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1476": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1477": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1479": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1480": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1481": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1482": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1483": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1484": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "1486": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1487": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "ADD",
      "path": "10"
    },
    "1488": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1489": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1490": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1491": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1492": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1493": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1494": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1496": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1497": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "ADD",
      "path": "10"
    },
    "1498": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1499": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1500": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1501": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "ADD",
      "path": "10"
    },
    "1502": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1503": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1504": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1505": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1506": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1507": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1508": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "ADD",
      "path": "10"
    },
    "1509": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1510": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "1512": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "AND",
      "path": "10"
    },
    "1513": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1514": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1515": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1516": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1517": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1518": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "ADD",
      "path": "10"
    },
    "1519": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1520": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1521": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1522": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1523": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3500,
        3551
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1524": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1525": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1526": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3523,
        3551
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1527": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3629,
        3882
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x608"
    },
    "1530": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3629,
        3882
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1531": {
      "op": "POP"
    },
    "1532": {
      "op": "POP"
    },
    "1533": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3682,
        3705
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 15
    },
    "1534": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3682,
        3705
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1535": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3737,
        3758
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 16,
      "value": "0x20"
    },
    "1537": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3737,
        3758
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1538": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3737,
        3758
      ],
      "op": "ADD",
      "path": "10"
    },
    "1539": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3737,
        3758
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1540": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3629,
        3882
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x611"
    },
    "1543": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3629,
        3882
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1544": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3629,
        3882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1545": {
      "op": "POP"
    },
    "1546": {
      "op": "POP"
    },
    "1547": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3809,
        3825
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 17,
      "value": "0x0"
    },
    "1549": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3809,
        3825
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1550": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3857,
        3871
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 18,
      "value": "0x1"
    },
    "1552": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3857,
        3871
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1553": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3629,
        3882
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1554": {
      "offset": [
        783,
        789
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2710"
    },
    "1557": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3908,
        3938
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1558": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3908,
        3938
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1559": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3908,
        3938
      ],
      "op": "MUL",
      "path": "10"
    },
    "1560": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3907,
        3949
      ],
      "op": "DIV",
      "path": "10"
    },
    "1561": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3896,
        3903
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1562": {
      "branch": 30,
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3896,
        3950
      ],
      "op": "GT",
      "path": "10"
    },
    "1563": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3892,
        3989
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1564": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3892,
        3989
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x62B"
    },
    "1567": {
      "branch": 30,
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3892,
        3989
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1568": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3973,
        3978
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 19,
      "value": "0x0"
    },
    "1570": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3966,
        3978
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1571": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3966,
        3978
      ],
      "op": "POP",
      "path": "10"
    },
    "1572": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3966,
        3978
      ],
      "op": "POP",
      "path": "10"
    },
    "1573": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3966,
        3978
      ],
      "op": "POP",
      "path": "10"
    },
    "1574": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3966,
        3978
      ],
      "op": "POP",
      "path": "10"
    },
    "1575": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3966,
        3978
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x64D"
    },
    "1578": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3966,
        3978
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1579": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3892,
        3989
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1580": {
      "offset": [
        783,
        789
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2710"
    },
    "1583": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4012,
        4040
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1584": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4012,
        4040
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1585": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4012,
        4040
      ],
      "op": "MUL",
      "path": "10"
    },
    "1586": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4011,
        4051
      ],
      "op": "DIV",
      "path": "10"
    },
    "1587": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4002,
        4007
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1588": {
      "branch": 31,
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4002,
        4052
      ],
      "op": "GT",
      "path": "10"
    },
    "1589": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3998,
        4091
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1590": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3998,
        4091
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x645"
    },
    "1593": {
      "branch": 31,
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3998,
        4091
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1594": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4075,
        4080
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 20,
      "value": "0x0"
    },
    "1596": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4068,
        4080
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1597": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4068,
        4080
      ],
      "op": "POP",
      "path": "10"
    },
    "1598": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4068,
        4080
      ],
      "op": "POP",
      "path": "10"
    },
    "1599": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4068,
        4080
      ],
      "op": "POP",
      "path": "10"
    },
    "1600": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4068,
        4080
      ],
      "op": "POP",
      "path": "10"
    },
    "1601": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4068,
        4080
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x64D"
    },
    "1604": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4068,
        4080
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1605": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3998,
        4091
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1606": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4107,
        4111
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 21,
      "value": "0x1"
    },
    "1608": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4100,
        4111
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1609": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4100,
        4111
      ],
      "op": "POP",
      "path": "10"
    },
    "1610": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4100,
        4111
      ],
      "op": "POP",
      "path": "10"
    },
    "1611": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4100,
        4111
      ],
      "op": "POP",
      "path": "10"
    },
    "1612": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        4100,
        4111
      ],
      "op": "POP",
      "path": "10"
    },
    "1613": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3349,
        4118
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1614": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3349,
        4118
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1615": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3349,
        4118
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1616": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3349,
        4118
      ],
      "op": "POP",
      "path": "10"
    },
    "1617": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3349,
        4118
      ],
      "op": "POP",
      "path": "10"
    },
    "1618": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "offset": [
        3349,
        4118
      ],
      "op": "POP",
      "path": "10"
    },
    "1619": {
      "fn": "CommonHealthCheck._executeDefaultCheck",
      "jump": "o",
      "offset": [
        3349,
        4118
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1620": {
      "op": "JUMPDEST"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1623": {
      "op": "MLOAD"
    },
    "1624": {
      "op": "DUP1"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1627": {
      "op": "ADD"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1630": {
      "op": "MSTORE"
    },
    "1631": {
      "op": "DUP1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1634": {
      "op": "DUP2"
    },
    "1635": {
      "op": "MSTORE"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1638": {
      "op": "ADD"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1641": {
      "op": "DUP2"
    },
    "1642": {
      "op": "MSTORE"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1645": {
      "op": "ADD"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1648": {
      "op": "ISZERO"
    },
    "1649": {
      "op": "ISZERO"
    },
    "1650": {
      "op": "DUP2"
    },
    "1651": {
      "op": "MSTORE"
    },
    "1652": {
      "op": "POP"
    },
    "1653": {
      "op": "SWAP1"
    },
    "1654": {
      "op": "JUMP"
    },
    "1655": {
      "op": "JUMPDEST"
    },
    "1656": {
      "op": "DUP1"
    },
    "1657": {
      "op": "CALLDATALOAD"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1664": {
      "op": "SHL"
    },
    "1665": {
      "op": "SUB"
    },
    "1666": {
      "op": "DUP2"
    },
    "1667": {
      "op": "AND"
    },
    "1668": {
      "op": "DUP2"
    },
    "1669": {
      "op": "EQ"
    },
    "1670": {
      "op": "PUSH2",
      "value": "0x68E"
    },
    "1673": {
      "op": "JUMPI"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1676": {
      "op": "DUP1"
    },
    "1677": {
      "op": "REVERT"
    },
    "1678": {
      "op": "JUMPDEST"
    },
    "1679": {
      "op": "SWAP3"
    },
    "1680": {
      "op": "SWAP2"
    },
    "1681": {
      "op": "POP"
    },
    "1682": {
      "op": "POP"
    },
    "1683": {
      "op": "JUMP"
    },
    "1684": {
      "op": "JUMPDEST"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1689": {
      "op": "DUP3"
    },
    "1690": {
      "op": "DUP5"
    },
    "1691": {
      "op": "SUB"
    },
    "1692": {
      "op": "SLT"
    },
    "1693": {
      "op": "ISZERO"
    },
    "1694": {
      "op": "PUSH2",
      "value": "0x6A5"
    },
    "1697": {
      "op": "JUMPI"
    },
    "1698": {
      "op": "DUP1"
    },
    "1699": {
      "op": "DUP2"
    },
    "1700": {
      "op": "REVERT"
    },
    "1701": {
      "op": "JUMPDEST"
    },
    "1702": {
      "op": "PUSH2",
      "value": "0x64D"
    },
    "1705": {
      "op": "DUP4"
    },
    "1706": {
      "op": "DUP4"
    },
    "1707": {
      "op": "PUSH2",
      "value": "0x677"
    },
    "1710": {
      "op": "JUMP"
    },
    "1711": {
      "op": "JUMPDEST"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1714": {
      "op": "DUP1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1717": {
      "op": "DUP4"
    },
    "1718": {
      "op": "DUP6"
    },
    "1719": {
      "op": "SUB"
    },
    "1720": {
      "op": "SLT"
    },
    "1721": {
      "op": "ISZERO"
    },
    "1722": {
      "op": "PUSH2",
      "value": "0x6C1"
    },
    "1725": {
      "op": "JUMPI"
    },
    "1726": {
      "op": "DUP1"
    },
    "1727": {
      "op": "DUP2"
    },
    "1728": {
      "op": "REVERT"
    },
    "1729": {
      "op": "JUMPDEST"
    },
    "1730": {
      "op": "PUSH2",
      "value": "0x6CB"
    },
    "1733": {
      "op": "DUP5"
    },
    "1734": {
      "op": "DUP5"
    },
    "1735": {
      "op": "PUSH2",
      "value": "0x677"
    },
    "1738": {
      "op": "JUMP"
    },
    "1739": {
      "op": "JUMPDEST"
    },
    "1740": {
      "op": "SWAP2"
    },
    "1741": {
      "op": "POP"
    },
    "1742": {
      "op": "PUSH2",
      "value": "0x6DA"
    },
    "1745": {
      "op": "DUP5"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1748": {
      "op": "DUP6"
    },
    "1749": {
      "op": "ADD"
    },
    "1750": {
      "op": "PUSH2",
      "value": "0x677"
    },
    "1753": {
      "op": "JUMP"
    },
    "1754": {
      "op": "JUMPDEST"
    },
    "1755": {
      "op": "SWAP1"
    },
    "1756": {
      "op": "POP"
    },
    "1757": {
      "op": "SWAP3"
    },
    "1758": {
      "op": "POP"
    },
    "1759": {
      "op": "SWAP3"
    },
    "1760": {
      "op": "SWAP1"
    },
    "1761": {
      "op": "POP"
    },
    "1762": {
      "op": "JUMP"
    },
    "1763": {
      "op": "JUMPDEST"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1766": {
      "op": "DUP1"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1771": {
      "op": "DUP5"
    },
    "1772": {
      "op": "DUP7"
    },
    "1773": {
      "op": "SUB"
    },
    "1774": {
      "op": "SLT"
    },
    "1775": {
      "op": "ISZERO"
    },
    "1776": {
      "op": "PUSH2",
      "value": "0x6F7"
    },
    "1779": {
      "op": "JUMPI"
    },
    "1780": {
      "op": "DUP1"
    },
    "1781": {
      "op": "DUP2"
    },
    "1782": {
      "op": "REVERT"
    },
    "1783": {
      "op": "JUMPDEST"
    },
    "1784": {
      "op": "PUSH2",
      "value": "0x701"
    },
    "1787": {
      "op": "DUP6"
    },
    "1788": {
      "op": "DUP6"
    },
    "1789": {
      "op": "PUSH2",
      "value": "0x677"
    },
    "1792": {
      "op": "JUMP"
    },
    "1793": {
      "op": "JUMPDEST"
    },
    "1794": {
      "op": "SWAP6"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1797": {
      "op": "DUP6"
    },
    "1798": {
      "op": "ADD"
    },
    "1799": {
      "op": "CALLDATALOAD"
    },
    "1800": {
      "op": "SWAP6"
    },
    "1801": {
      "op": "POP"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1804": {
      "op": "SWAP1"
    },
    "1805": {
      "op": "SWAP5"
    },
    "1806": {
      "op": "ADD"
    },
    "1807": {
      "op": "CALLDATALOAD"
    },
    "1808": {
      "op": "SWAP4"
    },
    "1809": {
      "op": "SWAP3"
    },
    "1810": {
      "op": "POP"
    },
    "1811": {
      "op": "POP"
    },
    "1812": {
      "op": "POP"
    },
    "1813": {
      "op": "JUMP"
    },
    "1814": {
      "op": "JUMPDEST"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1819": {
      "op": "DUP3"
    },
    "1820": {
      "op": "DUP5"
    },
    "1821": {
      "op": "SUB"
    },
    "1822": {
      "op": "SLT"
    },
    "1823": {
      "op": "ISZERO"
    },
    "1824": {
      "op": "PUSH2",
      "value": "0x727"
    },
    "1827": {
      "op": "JUMPI"
    },
    "1828": {
      "op": "DUP1"
    },
    "1829": {
      "op": "DUP2"
    },
    "1830": {
      "op": "REVERT"
    },
    "1831": {
      "op": "JUMPDEST"
    },
    "1832": {
      "op": "DUP2"
    },
    "1833": {
      "op": "MLOAD"
    },
    "1834": {
      "op": "DUP1"
    },
    "1835": {
      "op": "ISZERO"
    },
    "1836": {
      "op": "ISZERO"
    },
    "1837": {
      "op": "DUP2"
    },
    "1838": {
      "op": "EQ"
    },
    "1839": {
      "op": "PUSH2",
      "value": "0x64D"
    },
    "1842": {
      "op": "JUMPI"
    },
    "1843": {
      "op": "DUP2"
    },
    "1844": {
      "op": "DUP3"
    },
    "1845": {
      "op": "REVERT"
    },
    "1846": {
      "op": "JUMPDEST"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1851": {
      "op": "DUP3"
    },
    "1852": {
      "op": "DUP5"
    },
    "1853": {
      "op": "SUB"
    },
    "1854": {
      "op": "SLT"
    },
    "1855": {
      "op": "ISZERO"
    },
    "1856": {
      "op": "PUSH2",
      "value": "0x747"
    },
    "1859": {
      "op": "JUMPI"
    },
    "1860": {
      "op": "DUP1"
    },
    "1861": {
      "op": "DUP2"
    },
    "1862": {
      "op": "REVERT"
    },
    "1863": {
      "op": "JUMPDEST"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "op": "CALLDATALOAD"
    },
    "1866": {
      "op": "SWAP2"
    },
    "1867": {
      "op": "SWAP1"
    },
    "1868": {
      "op": "POP"
    },
    "1869": {
      "op": "JUMP"
    },
    "1870": {
      "op": "JUMPDEST"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1873": {
      "op": "DUP1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1876": {
      "op": "DUP1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1881": {
      "op": "DUP7"
    },
    "1882": {
      "op": "DUP9"
    },
    "1883": {
      "op": "SUB"
    },
    "1884": {
      "op": "SLT"
    },
    "1885": {
      "op": "ISZERO"
    },
    "1886": {
      "op": "PUSH2",
      "value": "0x765"
    },
    "1889": {
      "op": "JUMPI"
    },
    "1890": {
      "op": "DUP1"
    },
    "1891": {
      "op": "DUP2"
    },
    "1892": {
      "op": "REVERT"
    },
    "1893": {
      "op": "JUMPDEST"
    },
    "1894": {
      "op": "POP"
    },
    "1895": {
      "op": "POP"
    },
    "1896": {
      "op": "DUP4"
    },
    "1897": {
      "op": "CALLDATALOAD"
    },
    "1898": {
      "op": "SWAP6"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1901": {
      "op": "DUP6"
    },
    "1902": {
      "op": "ADD"
    },
    "1903": {
      "op": "CALLDATALOAD"
    },
    "1904": {
      "op": "SWAP6"
    },
    "1905": {
      "op": "POP"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1908": {
      "op": "DUP6"
    },
    "1909": {
      "op": "ADD"
    },
    "1910": {
      "op": "CALLDATALOAD"
    },
    "1911": {
      "op": "SWAP5"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1914": {
      "op": "DUP2"
    },
    "1915": {
      "op": "ADD"
    },
    "1916": {
      "op": "CALLDATALOAD"
    },
    "1917": {
      "op": "SWAP5"
    },
    "1918": {
      "op": "POP"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1921": {
      "op": "ADD"
    },
    "1922": {
      "op": "CALLDATALOAD"
    },
    "1923": {
      "op": "SWAP3"
    },
    "1924": {
      "op": "POP"
    },
    "1925": {
      "op": "SWAP1"
    },
    "1926": {
      "op": "POP"
    },
    "1927": {
      "op": "JUMP"
    },
    "1928": {
      "op": "JUMPDEST"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1935": {
      "op": "SHL"
    },
    "1936": {
      "op": "SUB"
    },
    "1937": {
      "op": "SWAP2"
    },
    "1938": {
      "op": "SWAP1"
    },
    "1939": {
      "op": "SWAP2"
    },
    "1940": {
      "op": "AND"
    },
    "1941": {
      "op": "DUP2"
    },
    "1942": {
      "op": "MSTORE"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1945": {
      "op": "ADD"
    },
    "1946": {
      "op": "SWAP1"
    },
    "1947": {
      "op": "JUMP"
    },
    "1948": {
      "op": "JUMPDEST"
    },
    "1949": {
      "op": "SWAP1"
    },
    "1950": {
      "op": "ISZERO"
    },
    "1951": {
      "op": "ISZERO"
    },
    "1952": {
      "op": "DUP2"
    },
    "1953": {
      "op": "MSTORE"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1956": {
      "op": "ADD"
    },
    "1957": {
      "op": "SWAP1"
    },
    "1958": {
      "op": "JUMP"
    },
    "1959": {
      "op": "JUMPDEST"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1962": {
      "op": "DUP1"
    },
    "1963": {
      "op": "DUP3"
    },
    "1964": {
      "op": "MSTORE"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1967": {
      "op": "SWAP1"
    },
    "1968": {
      "op": "DUP3"
    },
    "1969": {
      "op": "ADD"
    },
    "1970": {
      "op": "MSTORE"
    },
    "1971": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "1985": {
      "op": "SHL"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1988": {
      "op": "DUP3"
    },
    "1989": {
      "op": "ADD"
    },
    "1990": {
      "op": "MSTORE"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1993": {
      "op": "ADD"
    },
    "1994": {
      "op": "SWAP1"
    },
    "1995": {
      "op": "JUMP"
    },
    "1996": {
      "op": "JUMPDEST"
    },
    "1997": {
      "op": "SWAP1"
    },
    "1998": {
      "op": "DUP2"
    },
    "1999": {
      "op": "MSTORE"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2002": {
      "op": "ADD"
    },
    "2003": {
      "op": "SWAP1"
    },
    "2004": {
      "op": "JUMP"
    },
    "2005": {
      "op": "JUMPDEST"
    },
    "2006": {
      "op": "SWAP3"
    },
    "2007": {
      "op": "DUP4"
    },
    "2008": {
      "op": "MSTORE"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2011": {
      "op": "DUP4"
    },
    "2012": {
      "op": "ADD"
    },
    "2013": {
      "op": "SWAP2"
    },
    "2014": {
      "op": "SWAP1"
    },
    "2015": {
      "op": "SWAP2"
    },
    "2016": {
      "op": "MSTORE"
    },
    "2017": {
      "op": "ISZERO"
    },
    "2018": {
      "op": "ISZERO"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2021": {
      "op": "DUP3"
    },
    "2022": {
      "op": "ADD"
    },
    "2023": {
      "op": "MSTORE"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2026": {
      "op": "ADD"
    },
    "2027": {
      "op": "SWAP1"
    },
    "2028": {
      "op": "JUMP"
    },
    "2029": {
      "op": "JUMPDEST"
    },
    "2030": {
      "op": "SWAP5"
    },
    "2031": {
      "op": "DUP6"
    },
    "2032": {
      "op": "MSTORE"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2035": {
      "op": "DUP6"
    },
    "2036": {
      "op": "ADD"
    },
    "2037": {
      "op": "SWAP4"
    },
    "2038": {
      "op": "SWAP1"
    },
    "2039": {
      "op": "SWAP4"
    },
    "2040": {
      "op": "MSTORE"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2043": {
      "op": "DUP5"
    },
    "2044": {
      "op": "ADD"
    },
    "2045": {
      "op": "SWAP2"
    },
    "2046": {
      "op": "SWAP1"
    },
    "2047": {
      "op": "SWAP2"
    },
    "2048": {
      "op": "MSTORE"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2051": {
      "op": "DUP4"
    },
    "2052": {
      "op": "ADD"
    },
    "2053": {
      "op": "MSTORE"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2060": {
      "op": "SHL"
    },
    "2061": {
      "op": "SUB"
    },
    "2062": {
      "op": "AND"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2065": {
      "op": "DUP3"
    },
    "2066": {
      "op": "ADD"
    },
    "2067": {
      "op": "MSTORE"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2070": {
      "op": "ADD"
    },
    "2071": {
      "op": "SWAP1"
    },
    "2072": {
      "op": "JUMP"
    }
  },
  "sha1": "71811c33fa20460354172b93c2a885bb3dc68283",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.6.0 <0.7.0;\npragma experimental ABIEncoderV2;\n\ninterface CustomHealthCheck {\n    function check(\n        uint256 profit,\n        uint256 loss,\n        uint256 debtPayment,\n        uint256 debtOutstanding,\n        address callerStrategy\n    ) external view returns (bool);\n}\n\n// LEGACY INTERFACES PRE 0.3.2\nstruct LegacyStrategyParams {\n    uint256 performanceFee;\n    uint256 activation;\n    uint256 debtRatio;\n    uint256 rateLimit;\n    uint256 lastReport;\n    uint256 totalDebt;\n    uint256 totalGain;\n    uint256 totalLoss;\n}\n\nstruct Limits {\n    uint256 profitLimitRatio;\n    uint256 lossLimitRatio;\n    bool exists;\n}\n\ncontract CommonHealthCheck {\n    // Default Settings for all strategies\n    uint256 constant MAX_BPS = 10_000;\n    uint256 public profitLimitRatio;\n    uint256 public lossLimitRatio;\n    mapping(address => Limits) public strategiesLimits;\n\n    address public governance;\n    address public management;\n\n    mapping(address => address) public checks;\n\n    modifier onlyGovernance() {\n        require(msg.sender == governance, \"!authorized\");\n        _;\n    }\n\n    modifier onlyAuthorized() {\n        require(msg.sender == governance || msg.sender == management, \"!authorized\");\n        _;\n    }\n\n    constructor() public {\n        governance = msg.sender;\n        management = msg.sender;\n        profitLimitRatio = 300;\n        lossLimitRatio = 100;\n    }\n\n    function setGovernance(address _governance) external onlyGovernance {\n        require(_governance != address(0));\n        governance = _governance;\n    }\n\n    function setManagement(address _management) external onlyGovernance {\n        require(_management != address(0));\n        management = _management;\n    }\n\n    function setProfitLimitRatio(uint256 _profitLimitRatio) external onlyAuthorized {\n        require(_profitLimitRatio < MAX_BPS);\n        profitLimitRatio = _profitLimitRatio;\n    }\n\n    function setlossLimitRatio(uint256 _lossLimitRatio) external onlyAuthorized {\n        require(_lossLimitRatio < MAX_BPS);\n        lossLimitRatio = _lossLimitRatio;\n    }\n\n    function setStrategyLimits(\n        address _strategy,\n        uint256 _profitLimitRatio,\n        uint256 _lossLimitRatio\n    ) external onlyAuthorized {\n        require(_lossLimitRatio < MAX_BPS);\n        require(_profitLimitRatio < MAX_BPS);\n        strategiesLimits[_strategy] = Limits(_profitLimitRatio, _lossLimitRatio, true);\n    }\n\n    function setCheck(address _strategy, address _check) external onlyAuthorized {\n        checks[_strategy] = _check;\n    }\n\n    function check(\n        uint256 profit,\n        uint256 loss,\n        uint256 debtPayment,\n        uint256 debtOutstanding,\n        uint256 totalDebt\n    ) external view returns (bool) {\n        return _runChecks(profit, loss, debtPayment, debtOutstanding, totalDebt);\n    }\n\n    function _runChecks(\n        uint256 profit,\n        uint256 loss,\n        uint256 debtPayment,\n        uint256 debtOutstanding,\n        uint256 totalDebt\n    ) internal view returns (bool) {\n        address customCheck = checks[msg.sender];\n\n        if (customCheck == address(0)) {\n            return _executeDefaultCheck(profit, loss, totalDebt);\n        }\n\n        return CustomHealthCheck(customCheck).check(profit, loss, debtPayment, debtOutstanding, msg.sender);\n    }\n\n    function _executeDefaultCheck(\n        uint256 _profit,\n        uint256 _loss,\n        uint256 _totalDebt\n    ) internal view returns (bool) {\n        Limits memory limits = strategiesLimits[msg.sender];\n        uint256 _profitLimitRatio;\n        uint256 _lossLimitRatio;\n        if (limits.exists) {\n            _profitLimitRatio = limits.profitLimitRatio;\n            _lossLimitRatio = limits.lossLimitRatio;\n        } else {\n            _profitLimitRatio = profitLimitRatio;\n            _lossLimitRatio = lossLimitRatio;\n        }\n\n        if (_profit > ((_totalDebt * _profitLimitRatio) / MAX_BPS)) {\n            return false;\n        }\n        if (_loss > ((_totalDebt * _lossLimitRatio) / MAX_BPS)) {\n            return false;\n        }\n        return true;\n    }\n}\n",
  "sourceMap": "680:3440:10:-:0;;;1279:156;;;;;;;;;-1:-1:-1;1310:10:10;:23;;-1:-1:-1;;;;;;1310:23:10;;;1323:10;1310:23;;;;;;1343:10;:23;;;;;;;;;;1395:3;1310:10;1376:22;1425:3;1310:23;1408:20;680:3440;;;;;;",
  "sourcePath": "contracts/CommonHealthCheck.sol",
  "type": "contract"
}